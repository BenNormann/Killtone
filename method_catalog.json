{
  "src\\Game.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\Game.js",
      "line": 21
    },
    {
      "name": "initialize",
      "description": "Initialize the game engine and core systems",
      "file": "src\\Game.js",
      "line": 60
    },
    {
      "name": "initializeEngine",
      "description": "Initialize Babylon.js engine with configuration",
      "file": "src\\Game.js",
      "line": 96
    },
    {
      "name": "initializeScene",
      "description": "Initialize the main Babylon.js scene",
      "file": "src\\Game.js",
      "line": 121
    },
    {
      "name": "initializeManagers",
      "description": "Initialize all game managers",
      "file": "src\\Game.js",
      "line": 149
    },
    {
      "name": "setupErrorHandling",
      "description": "Setup error handling",
      "file": "src\\Game.js",
      "line": 194
    },
    {
      "name": "setupEventListeners",
      "description": "Setup event listeners",
      "file": "src\\Game.js",
      "line": 207
    },
    {
      "name": "start",
      "description": "Start the game loop",
      "file": "src\\Game.js",
      "line": 226
    },
    {
      "name": "update",
      "description": "Main game update loop",
      "file": "src\\Game.js",
      "line": 253
    },
    {
      "name": "updateManagers",
      "description": "Update all game managers",
      "file": "src\\Game.js",
      "line": 275
    },
    {
      "name": "updateFPS",
      "description": "Update FPS counter",
      "file": "src\\Game.js",
      "line": 289
    },
    {
      "name": "render",
      "description": "Render the scene",
      "file": "src\\Game.js",
      "line": 303
    },
    {
      "name": "onStateChanged",
      "description": "Handle state changes",
      "file": "src\\Game.js",
      "line": 312
    },
    {
      "name": "initializePlayer",
      "description": "Initialize local player",
      "file": "src\\Game.js",
      "line": 333
    },
    {
      "name": "setupPlayerEventHandlers",
      "description": "Set up player event handlers",
      "file": "src\\Game.js",
      "line": 382
    },
    {
      "name": "onResize",
      "description": "Handle window resize",
      "file": "src\\Game.js",
      "line": 452
    },
    {
      "name": "onFocusLost",
      "description": "Handle window focus loss",
      "file": "src\\Game.js",
      "line": 461
    },
    {
      "name": "onFocusGained",
      "description": "Handle window focus gain",
      "file": "src\\Game.js",
      "line": 470
    },
    {
      "name": "onError",
      "description": "Handle errors",
      "file": "src\\Game.js",
      "line": 479
    },
    {
      "name": "getScalingLevel",
      "description": "Get hardware scaling level based on performance settings",
      "file": "src\\Game.js",
      "line": 505
    },
    {
      "name": "getFPS",
      "description": "Get current FPS",
      "file": "src\\Game.js",
      "line": 518
    },
    {
      "name": "getEngineInfo",
      "description": "Get engine information",
      "file": "src\\Game.js",
      "line": 525
    },
    {
      "name": "startMultiplayer",
      "description": "Start multiplayer mode",
      "file": "src\\Game.js",
      "line": 537
    },
    {
      "name": "stop",
      "description": "Stop the game and cleanup",
      "file": "src\\Game.js",
      "line": 575
    },
    {
      "name": "dispose",
      "description": "Complete cleanup and disposal",
      "file": "src\\Game.js",
      "line": 602
    },
    {
      "name": "disposeManagers",
      "description": "Dispose of all managers and resources",
      "file": "src\\Game.js",
      "line": 630
    }
  ],
  "src\\audio\\AudioSystem.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\audio\\AudioSystem.js",
      "line": 11
    },
    {
      "name": "initialize",
      "description": "Initialize the audio system - sets up core audio and framework listeners",
      "file": "src\\audio\\AudioSystem.js",
      "line": 74
    },
    {
      "name": "initAudioContext",
      "description": "Initialize Web Audio API context for 3D spatial audio",
      "file": "src\\audio\\AudioSystem.js",
      "line": 94
    },
    {
      "name": "resumeAudioContext",
      "description": "Resume suspended audio context (required for user interaction)",
      "file": "src\\audio\\AudioSystem.js",
      "line": 123
    },
    {
      "name": "updateListener",
      "description": "Update 3D audio listener position and orientation",
      "file": "src\\audio\\AudioSystem.js",
      "line": 136
    },
    {
      "name": "isSoundPreloaded",
      "description": "Check if a sound file has been preloaded into cache",
      "file": "src\\audio\\AudioSystem.js",
      "line": 164
    },
    {
      "name": "playSound",
      "description": "Play a sound file with volume and loop options",
      "file": "src\\audio\\AudioSystem.js",
      "line": 171
    },
    {
      "name": "calculateDistanceVolume",
      "description": "Calculate volume based on 3D distance with exponential falloff",
      "file": "src\\audio\\AudioSystem.js",
      "line": 218
    },
    {
      "name": "play3DSound",
      "description": "Play 3D positioned sound with distance-based volume falloff",
      "file": "src\\audio\\AudioSystem.js",
      "line": 236
    },
    {
      "name": "playPositionalAudio",
      "description": "Play positional audio using Web Audio API panner node @param {string} soundPath - Path to sound file @param {Object} sourcePosition - 3D position of sound source @param {number} baseVolume - Base volume level @param {number} maxDistance - Maximum audible distance @param {boolean} loop - Whether to loop the sound @returns {AudioBufferSourceNode|null} Audio source node",
      "file": "src\\audio\\AudioSystem.js",
      "line": 256
    },
    {
      "name": "playPositionalAudioWithPanner",
      "description": "Play positional audio with full Web Audio API setup including panner and gain nodes @param {string} soundPath - Path to sound file @param {Object} sourcePosition - 3D position of sound source @param {number} baseVolume - Base volume level @param {number} maxDistance - Maximum audible distance @param {boolean} loop - Whether to loop the sound @returns {Object|null} Object containing source and panner nodes",
      "file": "src\\audio\\AudioSystem.js",
      "line": 270
    },
    {
      "name": "playWeaponSound",
      "description": "Play weapon firing sound for local player @param {Object} weaponConfig - Weapon configuration containing audio settings @returns {Promise<HTMLAudioElement|null>} Audio element or null if failed",
      "file": "src\\audio\\AudioSystem.js",
      "line": 350
    },
    {
      "name": "playRemoteWeaponSound",
      "description": "Play 3D positioned weapon sound for remote players @param {Object} weaponConfig - Weapon configuration containing audio settings @param {Object} listenerPosition - Position of the audio listener @param {Object} sourcePosition - Position where the weapon was fired @returns {Promise<HTMLAudioElement|null>} Audio element or null if failed",
      "file": "src\\audio\\AudioSystem.js",
      "line": 365
    },
    {
      "name": "playDamageSound",
      "description": "Play damage sound when local player takes damage @returns {Promise<HTMLAudioElement|null>} Audio element or null if failed",
      "file": "src\\audio\\AudioSystem.js",
      "line": 374
    },
    {
      "name": "playRemoteDamageSound",
      "description": "Play 3D positioned damage sound for remote players @param {Object} listenerPosition - Position of the audio listener @param {Object} sourcePosition - Position where damage occurred @returns {Promise<HTMLAudioElement|null>} Audio element or null if failed",
      "file": "src\\audio\\AudioSystem.js",
      "line": 384
    },
    {
      "name": "playReloadSound",
      "description": "Play weapon reload sound @param {Object} weaponConfig - Weapon configuration containing audio settings @returns {Promise<HTMLAudioElement|null>} Audio element or null if failed",
      "file": "src\\audio\\AudioSystem.js",
      "line": 393
    },
    {
      "name": "playWalkingSound",
      "description": "Start playing walking/footstep sounds for local player @param {boolean} isSprinting - Whether the player is sprinting @returns {Promise<void>}",
      "file": "src\\audio\\AudioSystem.js",
      "line": 403
    },
    {
      "name": "playLocalStepSequence",
      "description": "Play sequence of randomized footstep sounds for local player @param {boolean} isSprinting - Whether the player is sprinting (affects timing and volume)",
      "file": "src\\audio\\AudioSystem.js",
      "line": 415
    },
    {
      "name": "stopWalkingSound",
      "description": "Stop all walking/footstep sounds for local player",
      "file": "src\\audio\\AudioSystem.js",
      "line": 487
    },
    {
      "name": "playRemoteWalkingSound",
      "description": "Play 3D positioned walking sound for remote players @param {string} playerId - Unique identifier for the remote player @param {Object} sourcePosition - 3D position of the remote player @param {boolean} isSprinting - Whether the remote player is sprinting @returns {Promise<HTMLAudioElement|null>} Audio element or null if rate limited",
      "file": "src\\audio\\AudioSystem.js",
      "line": 515
    },
    {
      "name": "updateWalkingSoundPosition",
      "description": "Update the 3D position of a remote player's walking sound @param {string} playerId - Unique identifier for the remote player @param {Object} newPosition - New 3D position of the remote player",
      "file": "src\\audio\\AudioSystem.js",
      "line": 538
    },
    {
      "name": "stopRemoteWalkingSound",
      "description": "Stop walking sound for a specific remote player @param {string} playerId - Unique identifier for the remote player",
      "file": "src\\audio\\AudioSystem.js",
      "line": 554
    },
    {
      "name": "playMusic",
      "description": "Play music file with specified volume and loop settings @param {string} musicPath - Path to music file @param {number} volume - Volume level (0.0 to 1.0) @param {boolean} loop - Whether to loop the music @returns {Promise<HTMLAudioElement|null>} Audio element or null if failed",
      "file": "src\\audio\\AudioSystem.js",
      "line": 580
    },
    {
      "name": "stopAudio",
      "description": "Stop and reset an audio element @param {HTMLAudioElement} audio - Audio element to stop",
      "file": "src\\audio\\AudioSystem.js",
      "line": 588
    },
    {
      "name": "setupFrameworkListeners",
      "description": "Set up event listeners for framework integration",
      "file": "src\\audio\\AudioSystem.js",
      "line": 604
    },
    {
      "name": "onStateChange",
      "description": "Handle game state changes and adjust audio accordingly @param {string} newState - New game state @param {string} oldState - Previous game state",
      "file": "src\\audio\\AudioSystem.js",
      "line": 662
    },
    {
      "name": "handleLoadingState",
      "description": "Handle loading state - stop music and start preloading sounds",
      "file": "src\\audio\\AudioSystem.js",
      "line": 690
    },
    {
      "name": "handleMainMenuState",
      "description": "Handle main menu state - stop flowstate music and reduce volume",
      "file": "src\\audio\\AudioSystem.js",
      "line": 704
    },
    {
      "name": "handleInGameState",
      "description": "Handle in-game state - restore full volume and resume audio context",
      "file": "src\\audio\\AudioSystem.js",
      "line": 713
    },
    {
      "name": "handlePausedState",
      "description": "Handle paused state - reduce music volume and stop walking sounds",
      "file": "src\\audio\\AudioSystem.js",
      "line": 721
    },
    {
      "name": "handleMapEditorState",
      "description": "Handle map editor state - stop flowstate music and set moderate volume",
      "file": "src\\audio\\AudioSystem.js",
      "line": 731
    },
    {
      "name": "onMusicTrackSelected",
      "description": "Handle music track selection from UI @param {string} trackPath - Path to selected music track",
      "file": "src\\audio\\AudioSystem.js",
      "line": 741
    },
    {
      "name": "onSettingsChange",
      "description": "Handle settings changes from UI @param {Object} newSettings - New audio settings",
      "file": "src\\audio\\AudioSystem.js",
      "line": 750
    },
    {
      "name": "applySettings",
      "description": "Apply audio settings to the system @param {Object} settings - Audio settings to apply",
      "file": "src\\audio\\AudioSystem.js",
      "line": 764
    },
    {
      "name": "onPlayerKill",
      "description": "Handle player kill events - play kill sound effect @param {Object} data - Kill event data",
      "file": "src\\audio\\AudioSystem.js",
      "line": 779
    },
    {
      "name": "onPlayerDeath",
      "description": "Handle player death events - play damage sound and stop flowstate @param {Object} data - Death event data",
      "file": "src\\audio\\AudioSystem.js",
      "line": 787
    },
    {
      "name": "onPlayerMove",
      "description": "Handle player movement events - update listener position and walking sounds @param {Object} data - Movement event data containing position, direction, and movement state",
      "file": "src\\audio\\AudioSystem.js",
      "line": 801
    },
    {
      "name": "onWeaponFired",
      "description": "Handle weapon fired events - play appropriate weapon sound @param {Object} data - Weapon fire event data containing weapon config and position",
      "file": "src\\audio\\AudioSystem.js",
      "line": 819
    },
    {
      "name": "onWeaponReload",
      "description": "Handle weapon reload events - play reload sound @param {Object} data - Weapon reload event data",
      "file": "src\\audio\\AudioSystem.js",
      "line": 834
    },
    {
      "name": "onFlowstateChange",
      "description": "Handle flowstate intensity changes - start/stop/adjust flowstate music @param {number} intensity - Flowstate intensity (0-1) @param {boolean} isActive - Whether flowstate is currently active",
      "file": "src\\audio\\AudioSystem.js",
      "line": 844
    },
    {
      "name": "startFlowstateMusic",
      "description": "Start flowstate music using the selected track @returns {Promise<void>}",
      "file": "src\\audio\\AudioSystem.js",
      "line": 864
    },
    {
      "name": "stopFlowstateMusic",
      "description": "Stop flowstate music and reset music reference",
      "file": "src\\audio\\AudioSystem.js",
      "line": 903
    },
    {
      "name": "adjustFlowstateMusicVolume",
      "description": "Adjust flowstate music volume based on intensity level @param {number} intensity - Flowstate intensity (0-1)",
      "file": "src\\audio\\AudioSystem.js",
      "line": 915
    },
    {
      "name": "handleRemotePlayerAudio",
      "description": "Handle remote player audio events for multiplayer @param {string} playerId - Remote player ID @param {string} eventType - Type of audio event @param {Object} data - Event data",
      "file": "src\\audio\\AudioSystem.js",
      "line": 929
    },
    {
      "name": "getAvailableTracks",
      "description": "Get array of available music tracks for UI selection @returns {Array<string>} Array of available track paths",
      "file": "src\\audio\\AudioSystem.js",
      "line": 957
    },
    {
      "name": "getSelectedTrack",
      "description": "Get currently selected flowstate track @returns {string|null} Currently selected track path or null",
      "file": "src\\audio\\AudioSystem.js",
      "line": 965
    },
    {
      "name": "setFlowstateTrack",
      "description": "Set flowstate music track (called from UI) @param {string} trackPath - Path to music track",
      "file": "src\\audio\\AudioSystem.js",
      "line": 973
    },
    {
      "name": "getSettings",
      "description": "Get current audio settings @returns {Object} Copy of current audio settings",
      "file": "src\\audio\\AudioSystem.js",
      "line": 986
    },
    {
      "name": "updateSetting",
      "description": "Update specific audio setting and apply changes @param {string} key - Setting key @param {*} value - Setting value",
      "file": "src\\audio\\AudioSystem.js",
      "line": 995
    },
    {
      "name": "isEnabled",
      "description": "Check if audio system is enabled @returns {boolean} True if audio is enabled",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1004
    },
    {
      "name": "isFlowstateActive",
      "description": "Check if currently in flowstate mode @returns {boolean} True if in flowstate",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1012
    },
    {
      "name": "setMasterVolume",
      "description": "Set master volume level @param {number} volume - Volume level (0.0 to 1.0)",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1020
    },
    {
      "name": "setEnabled",
      "description": "Enable or disable the audio system @param {boolean} enabled - Whether to enable audio",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1028
    },
    {
      "name": "resume",
      "description": "Resume the audio system (called from game pause/resume)",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1038
    },
    {
      "name": "pause",
      "description": "Pause the audio system (called from game pause/resume)",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1045
    },
    {
      "name": "isPreloadingComplete",
      "description": "Check if sound preloading is complete @returns {boolean} True if preloading is complete",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1061
    },
    {
      "name": "waitForPreloading",
      "description": "Wait for sound preloading to complete @returns {Promise<boolean>} Promise that resolves when preloading is complete",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1069
    },
    {
      "name": "preloadSounds",
      "description": "Preload all game sounds for better performance @returns {Promise<Object>} Promise that resolves with preloading results",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1086
    },
    {
      "name": "cleanupStuckSounds",
      "description": "Clean up stuck or orphaned audio sources and expired step sounds",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1230
    },
    {
      "name": "stopAllSounds",
      "description": "Stop all active audio sources and clear sound pools",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1275
    },
    {
      "name": "update",
      "description": "Update method called from game loop for periodic maintenance @param {number} deltaTime - Time elapsed since last update",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1306
    },
    {
      "name": "dispose",
      "description": "Cleanup and dispose of all audio resources",
      "file": "src\\audio\\AudioSystem.js",
      "line": 1316
    }
  ],
  "src\\effects\\BloodEffects.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\effects\\BloodEffects.js",
      "line": 11
    },
    {
      "name": "initialize",
      "description": "Initialize blood effects system",
      "file": "src\\effects\\BloodEffects.js",
      "line": 38
    },
    {
      "name": "createBloodMaterials",
      "description": "Create blood materials for different effects",
      "file": "src\\effects\\BloodEffects.js",
      "line": 56
    },
    {
      "name": "createBloodSplatter",
      "description": "Create blood splatter effect when player is hit",
      "file": "src\\effects\\BloodEffects.js",
      "line": 79
    },
    {
      "name": "createBloodDecal",
      "description": "Create blood decal on surfaces",
      "file": "src\\effects\\BloodEffects.js",
      "line": 135
    },
    {
      "name": "createBloodDecalMesh",
      "description": "Create blood decal mesh",
      "file": "src\\effects\\BloodEffects.js",
      "line": 166
    },
    {
      "name": "animateDecalAppearance",
      "description": "Animate decal appearance",
      "file": "src\\effects\\BloodEffects.js",
      "line": 213
    },
    {
      "name": "removeBloodDecal",
      "description": "Remove blood decal",
      "file": "src\\effects\\BloodEffects.js",
      "line": 232
    },
    {
      "name": "createBloodTrail",
      "description": "Create blood trail effect for moving wounded players",
      "file": "src\\effects\\BloodEffects.js",
      "line": 271
    },
    {
      "name": "createBloodPool",
      "description": "Create blood pool effect for stationary wounded players",
      "file": "src\\effects\\BloodEffects.js",
      "line": 309
    },
    {
      "name": "animatePoolGrowth",
      "description": "Animate blood pool growth",
      "file": "src\\effects\\BloodEffects.js",
      "line": 362
    },
    {
      "name": "cleanupOldEffects",
      "description": "Clean up old blood effects",
      "file": "src\\effects\\BloodEffects.js",
      "line": 381
    },
    {
      "name": "update",
      "description": "Update blood effects (called from game loop)",
      "file": "src\\effects\\BloodEffects.js",
      "line": 408
    },
    {
      "name": "clearAllBloodEffects",
      "description": "Clear all blood effects",
      "file": "src\\effects\\BloodEffects.js",
      "line": 418
    },
    {
      "name": "setSettings",
      "description": "Set blood effects settings",
      "file": "src\\effects\\BloodEffects.js",
      "line": 441
    },
    {
      "name": "getStats",
      "description": "Get blood effects statistics",
      "file": "src\\effects\\BloodEffects.js",
      "line": 449
    },
    {
      "name": "dispose",
      "description": "Dispose of blood effects system",
      "file": "src\\effects\\BloodEffects.js",
      "line": 460
    }
  ],
  "src\\effects\\FlowstateAdapter.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 9
    },
    {
      "name": "initialize",
      "description": "Initialize the adapter and connect to framework events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 28
    },
    {
      "name": "connectToGameEvents",
      "description": "Connect to general game events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 61
    },
    {
      "name": "connectToStateEvents",
      "description": "Connect to state manager events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 76
    },
    {
      "name": "connectToPlayerEvents",
      "description": "Connect to player manager events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 103
    },
    {
      "name": "updateFlowstateManagerReferences",
      "description": "Update flowstate manager with current game system references",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 126
    },
    {
      "name": "onPlayerKill",
      "description": "Handle player kill events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 140
    },
    {
      "name": "onPlayerDeath",
      "description": "Handle player death events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 166
    },
    {
      "name": "onRemotePlayerDeath",
      "description": "Handle remote player death events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 191
    },
    {
      "name": "onPlayerSpawn",
      "description": "Handle player spawn events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 216
    },
    {
      "name": "onRemotePlayerSpawn",
      "description": "Handle remote player spawn events",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 227
    },
    {
      "name": "onStateChange",
      "description": "Handle game state changes",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 242
    },
    {
      "name": "onSettingsChanged",
      "description": "Handle settings changes",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 255
    },
    {
      "name": "enableFlowstate",
      "description": "Enable flowstate system",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 282
    },
    {
      "name": "pauseFlowstate",
      "description": "Pause flowstate system (during pause/menu states)",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 297
    },
    {
      "name": "resetFlowstate",
      "description": "Reset flowstate system (when leaving game)",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 314
    },
    {
      "name": "isFlowstateEnabled",
      "description": "Check if flowstate should be enabled based on current game state",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 329
    },
    {
      "name": "getFlowstateStatus",
      "description": "Get current flowstate status",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 339
    },
    {
      "name": "updatePlayerHighlighting",
      "description": "Force update player highlighting (useful for debugging or manual refresh)",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 359
    },
    {
      "name": "connectToPlayerManagerLater",
      "description": "Connect to player manager if it becomes available later",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 369
    },
    {
      "name": "update",
      "description": "Update method called from game loop",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 380
    },
    {
      "name": "dispose",
      "description": "Cleanup and dispose",
      "file": "src\\effects\\FlowstateAdapter.js",
      "line": 395
    }
  ],
  "src\\effects\\FlowstateEffects.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 2
    },
    {
      "name": "onKill",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 50
    },
    {
      "name": "onDeath",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 67
    },
    {
      "name": "onRemotePlayerDeath",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 77
    },
    {
      "name": "startFlowstate",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 139
    },
    {
      "name": "stopFlowstate",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 162
    },
    {
      "name": "updateFlowstateIntensity",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 180
    },
    {
      "name": "startBackgroundMusic",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 200
    },
    {
      "name": "stopBackgroundMusic",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 226
    },
    {
      "name": "updateMusicVolume",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 239
    },
    {
      "name": "initializeVisualEffects",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 250
    },
    {
      "name": "createSceneOverlay",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 260
    },
    {
      "name": "dimSceneLighting",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 289
    },
    {
      "name": "darkenEnvironmentMaterials",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 303
    },
    {
      "name": "resetVisualEffects",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 357
    },
    {
      "name": "updatePlayerHighlighting",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 384
    },
    {
      "name": "highlightPlayer",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 406
    },
    {
      "name": "updatePlayerHighlightingOld",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 445
    },
    {
      "name": "applyPlayerHighlight",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 491
    },
    {
      "name": "resetPlayerHighlighting",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 593
    },
    {
      "name": "resetPlayerMaterials",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 628
    },
    {
      "name": "resetPlayerHighlightingOld",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 717
    },
    {
      "name": "attemptMaterialRecreation",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 831
    },
    {
      "name": "update",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 865
    },
    {
      "name": "updateVisualOverlay",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 895
    },
    {
      "name": "debugToggleMaxFlowstate",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 946
    },
    {
      "name": "dispose",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 969
    },
    {
      "name": "onPlayerMovement",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 986
    },
    {
      "name": "createCountdownBars",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 996
    },
    {
      "name": "updateCountdownBars",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 1032
    },
    {
      "name": "hideCountdownBars",
      "description": "No description available",
      "file": "src\\effects\\FlowstateEffects.js",
      "line": 1086
    }
  ],
  "src\\effects\\KnifeEffect.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 11
    },
    {
      "name": "createKnifeTrail",
      "description": "Create a knife trail effect following the blade movement @param {BABYLON.Vector3} startPosition - Starting position of the trail @param {BABYLON.Vector3} endPosition - Ending position of the trail @param {BABYLON.Mesh} knifeMesh - Knife mesh to follow (optional) @returns {Object} Effect object for tracking",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 44
    },
    {
      "name": "updateKnifeTrailPosition",
      "description": "Update knife trail with new blade position during swing @param {Object} effect - Knife trail effect object @param {BABYLON.Vector3} newPosition - New blade tip position",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 108
    },
    {
      "name": "createContinuousKnifeTrail",
      "description": "Create a continuous knife trail that follows the blade during swing animation This method should be called repeatedly during the knife swing to create a smooth trail @param {BABYLON.Mesh} knifeMesh - The knife mesh to track @param {number} swingDuration - Duration of the swing in seconds (default 4.83s) @returns {Object} Effect object for tracking",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 141
    },
    {
      "name": "addPositionToKnifeTrail",
      "description": "Add a position to an existing knife trail (for manual trail building) @param {Object} effect - Knife trail effect object @param {BABYLON.Vector3} position - New position to add to trail",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 176
    },
    {
      "name": "update",
      "description": "Update all active knife trail effects @param {number} deltaTime - Time elapsed since last update in seconds",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 194
    },
    {
      "name": "getKnifeTrailFromPool",
      "description": "Get a knife trail mesh from the pool or create a new one @returns {BABYLON.Mesh} Knife trail mesh",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 225
    },
    {
      "name": "createKnifeTrailMesh",
      "description": "Create a new knife trail mesh @returns {BABYLON.Mesh} New knife trail mesh",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 253
    },
    {
      "name": "updateKnifeTrailFade",
      "description": "Update knife trail fade effect @param {Object} effect - Knife trail effect object @param {number} progress - Progress from 0 to 1",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 289
    },
    {
      "name": "updateKnifeTrailPath",
      "description": "Update knife trail path based on blade movement @param {Object} effect - Knife trail effect object",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 301
    },
    {
      "name": "disposeKnifeTrail",
      "description": "Dispose of a knife trail effect @param {Object} effect - Knife trail effect object",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 365
    },
    {
      "name": "disposeEffect",
      "description": "Dispose of a specific effect by ID @param {string} effectId - Effect ID to dispose",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 383
    },
    {
      "name": "getActiveEffectCounts",
      "description": "Get count of active effects for debugging @returns {Object} Effect counts",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 399
    },
    {
      "name": "dispose",
      "description": "Clean up all effects and dispose resources",
      "file": "src\\effects\\KnifeEffect.js",
      "line": 411
    }
  ],
  "src\\effects\\MuzzleFlash.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 7
    },
    {
      "name": "initialize",
      "description": "Initialize muzzle flash system",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 21
    },
    {
      "name": "createMaterials",
      "description": "Create muzzle flash materials",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 29
    },
    {
      "name": "createMuzzleFlash",
      "description": "Create muzzle flash effect attached to weapon",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 50
    },
    {
      "name": "removeMuzzleFlash",
      "description": "Remove muzzle flash",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 117
    },
    {
      "name": "update",
      "description": "Update muzzle flashes (called from game loop)",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 130
    },
    {
      "name": "clearAll",
      "description": "Clear all muzzle flashes",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 150
    },
    {
      "name": "dispose",
      "description": "Dispose of muzzle flash system",
      "file": "src\\effects\\MuzzleFlash.js",
      "line": 159
    }
  ],
  "src\\effects\\ParticleManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\effects\\ParticleManager.js",
      "line": 11
    },
    {
      "name": "initialize",
      "description": "Initialize the particle manager and create effect templates",
      "file": "src\\effects\\ParticleManager.js",
      "line": 42
    },
    {
      "name": "createEffectTemplates",
      "description": "Create common particle effect templates",
      "file": "src\\effects\\ParticleManager.js",
      "line": 69
    },
    {
      "name": "createParticleSystem",
      "description": "Create a particle system from a template",
      "file": "src\\effects\\ParticleManager.js",
      "line": 133
    },
    {
      "name": "createNewParticleSystem",
      "description": "Create a new particle system from template",
      "file": "src\\effects\\ParticleManager.js",
      "line": 182
    },
    {
      "name": "configureParticleSystem",
      "description": "Configure particle system with position and options",
      "file": "src\\effects\\ParticleManager.js",
      "line": 235
    },
    {
      "name": "getParticleTexture",
      "description": "Get particle texture (default or custom)",
      "file": "src\\effects\\ParticleManager.js",
      "line": 270
    },
    {
      "name": "getFromPool",
      "description": "Get particle system from pool",
      "file": "src\\effects\\ParticleManager.js",
      "line": 286
    },
    {
      "name": "returnToPool",
      "description": "Return particle system to pool",
      "file": "src\\effects\\ParticleManager.js",
      "line": 300
    },
    {
      "name": "setupAutoCleanup",
      "description": "Setup auto-cleanup for particle system",
      "file": "src\\effects\\ParticleManager.js",
      "line": 336
    },
    {
      "name": "createBloodSplatter",
      "description": "Create blood splatter effect",
      "file": "src\\effects\\ParticleManager.js",
      "line": 350
    },
    {
      "name": "createHitSpark",
      "description": "Create hit spark effect",
      "file": "src\\effects\\ParticleManager.js",
      "line": 366
    },
    {
      "name": "createExplosion",
      "description": "Create explosion effect",
      "file": "src\\effects\\ParticleManager.js",
      "line": 380
    },
    {
      "name": "setupPerformanceMonitoring",
      "description": "Setup performance monitoring",
      "file": "src\\effects\\ParticleManager.js",
      "line": 392
    },
    {
      "name": "startCleanupInterval",
      "description": "Start cleanup interval",
      "file": "src\\effects\\ParticleManager.js",
      "line": 417
    },
    {
      "name": "performCleanup",
      "description": "Perform cleanup of inactive particle systems",
      "file": "src\\effects\\ParticleManager.js",
      "line": 426
    },
    {
      "name": "update",
      "description": "Update particle manager (called from game loop)",
      "file": "src\\effects\\ParticleManager.js",
      "line": 452
    },
    {
      "name": "stopAllParticles",
      "description": "Stop all particle systems",
      "file": "src\\effects\\ParticleManager.js",
      "line": 460
    },
    {
      "name": "dispose",
      "description": "Dispose of the particle manager",
      "file": "src\\effects\\ParticleManager.js",
      "line": 473
    },
    {
      "name": "getStats",
      "description": "Get performance statistics",
      "file": "src\\effects\\ParticleManager.js",
      "line": 519
    }
  ],
  "src\\engine\\AssetManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\AssetManager.js",
      "line": 10
    },
    {
      "name": "addProgressCallback",
      "description": "Add a progress callback to receive loading updates @param {Function} callback - Function to call with progress updates",
      "file": "src\\engine\\AssetManager.js",
      "line": 43
    },
    {
      "name": "removeProgressCallback",
      "description": "Remove a progress callback @param {Function} callback - Function to remove",
      "file": "src\\engine\\AssetManager.js",
      "line": 53
    },
    {
      "name": "notifyProgress",
      "description": "Notify all progress callbacks with current progress",
      "file": "src\\engine\\AssetManager.js",
      "line": 63
    },
    {
      "name": "addDependency",
      "description": "Add asset dependency relationship @param {string} assetName - Name of the dependent asset @param {string[]} dependencies - Array of asset names this asset depends on",
      "file": "src\\engine\\AssetManager.js",
      "line": 82
    },
    {
      "name": "resolveDependencies",
      "description": "Resolve loading order based on dependencies @param {Array} assetList - List of assets to resolve @returns {Array} - Ordered list of assets to load",
      "file": "src\\engine\\AssetManager.js",
      "line": 94
    },
    {
      "name": "loadModel",
      "description": "Load a single model with progress tracking @param {string} name - Asset name @param {string} folder - Folder path @param {string} filename - File name @param {string} category - Asset category (essential, gameplay, optional) @returns {Promise} - Promise resolving to loaded asset data",
      "file": "src\\engine\\AssetManager.js",
      "line": 135
    },
    {
      "name": "createPlaceholderAsset",
      "description": "Create a placeholder asset for failed loads @param {string} name - Asset name @param {string} category - Asset category @returns {Object} - Placeholder asset data",
      "file": "src\\engine\\AssetManager.js",
      "line": 215
    },
    {
      "name": "loadAssets",
      "description": "Load multiple assets with dependency resolution and progress tracking @param {Array} assetList - Array of asset objects {name, folder, filename, category, dependencies} @param {boolean} resolveOrder - Whether to resolve dependency order @returns {Promise} - Promise resolving when all assets are loaded",
      "file": "src\\engine\\AssetManager.js",
      "line": 244
    },
    {
      "name": "categorizeAssets",
      "description": "Categorize assets into loading priorities @param {Array} assetList - List of assets to categorize",
      "file": "src\\engine\\AssetManager.js",
      "line": 315
    },
    {
      "name": "getAsset",
      "description": "Get a loaded asset @param {string} name - Asset name @returns {Object|null} - Asset data or null if not found",
      "file": "src\\engine\\AssetManager.js",
      "line": 335
    },
    {
      "name": "isAssetLoaded",
      "description": "Check if an asset is loaded @param {string} name - Asset name @returns {boolean} - True if asset is loaded",
      "file": "src\\engine\\AssetManager.js",
      "line": 344
    },
    {
      "name": "cloneModel",
      "description": "Clone a loaded model for reuse @param {string} name - Original asset name @param {string} newName - New instance name @returns {Array|null} - Array of cloned meshes or null if asset not found",
      "file": "src\\engine\\AssetManager.js",
      "line": 354
    },
    {
      "name": "disposeAsset",
      "description": "Dispose of an asset and free memory @param {string} name - Asset name to dispose",
      "file": "src\\engine\\AssetManager.js",
      "line": 373
    },
    {
      "name": "getProgress",
      "description": "Get loading progress information @returns {Object} - Current loading progress",
      "file": "src\\engine\\AssetManager.js",
      "line": 402
    },
    {
      "name": "loadWeaponAsset",
      "description": "Load weapon assets for use by WeaponBase classes @param {string} weaponType - Weapon type @param {Object} weaponConfig - Weapon configuration @returns {Promise} - Promise resolving to weapon asset data",
      "file": "src\\engine\\AssetManager.js",
      "line": 412
    },
    {
      "name": "loadTexture",
      "description": "Load an image texture @param {string} name - Asset name @param {string} path - Image path @returns {Promise} - Promise resolving to texture",
      "file": "src\\engine\\AssetManager.js",
      "line": 432
    },
    {
      "name": "loadGameAssets",
      "description": "Load game assets based on configuration @returns {Promise} - Promise resolving when all game assets are loaded",
      "file": "src\\engine\\AssetManager.js",
      "line": 488
    },
    {
      "name": "loadMapAssets",
      "description": "Load map-specific assets @param {Object} mapData - Map data containing asset requirements @returns {Promise} - Promise resolving when map assets are loaded",
      "file": "src\\engine\\AssetManager.js",
      "line": 524
    },
    {
      "name": "_doDispose",
      "description": "Clear all loaded assets and free memory",
      "file": "src\\engine\\AssetManager.js",
      "line": 543
    }
  ],
  "src\\engine\\BaseManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\BaseManager.js",
      "line": 7
    },
    {
      "name": "initialize",
      "description": "Initialize the manager - override in subclasses @returns {Promise<void>}",
      "file": "src\\engine\\BaseManager.js",
      "line": 26
    },
    {
      "name": "_doInitialize",
      "description": "Subclass-specific initialization - override in subclasses @protected",
      "file": "src\\engine\\BaseManager.js",
      "line": 58
    },
    {
      "name": "update",
      "description": "Update method called from game loop - override in subclasses @param {number} deltaTime - Time elapsed since last update",
      "file": "src\\engine\\BaseManager.js",
      "line": 66
    },
    {
      "name": "_doUpdate",
      "description": "Subclass-specific update - override in subclasses @param {number} deltaTime - Time elapsed since last update @protected",
      "file": "src\\engine\\BaseManager.js",
      "line": 80
    },
    {
      "name": "dispose",
      "description": "Dispose of the manager and clean up resources",
      "file": "src\\engine\\BaseManager.js",
      "line": 87
    },
    {
      "name": "_doDispose",
      "description": "Subclass-specific disposal - override in subclasses @protected",
      "file": "src\\engine\\BaseManager.js",
      "line": 120
    },
    {
      "name": "isReady",
      "description": "Check if manager is ready for use @returns {boolean}",
      "file": "src\\engine\\BaseManager.js",
      "line": 131
    },
    {
      "name": "getStatus",
      "description": "Get manager status information @returns {Object}",
      "file": "src\\engine\\BaseManager.js",
      "line": 139
    },
    {
      "name": "on",
      "description": "Add event listener @param {string} event - Event name @param {Function} listener - Event listener function",
      "file": "src\\engine\\BaseManager.js",
      "line": 153
    },
    {
      "name": "off",
      "description": "Remove event listener @param {string} event - Event name @param {Function} listener - Event listener function",
      "file": "src\\engine\\BaseManager.js",
      "line": 165
    },
    {
      "name": "emit",
      "description": "Emit event to all listeners @param {string} event - Event name @param {...any} args - Arguments to pass to listeners",
      "file": "src\\engine\\BaseManager.js",
      "line": 181
    },
    {
      "name": "removeAllListeners",
      "description": "Remove all event listeners",
      "file": "src\\engine\\BaseManager.js",
      "line": 198
    }
  ],
  "src\\engine\\InputManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\InputManager.js",
      "line": 9
    },
    {
      "name": "_initializeDefaultBindings",
      "description": "Initialize default key bindings from config",
      "file": "src\\engine\\InputManager.js",
      "line": 49
    },
    {
      "name": "initialize",
      "description": "Initialize the input manager",
      "file": "src\\engine\\InputManager.js",
      "line": 92
    },
    {
      "name": "_setupEventListeners",
      "description": "Setup event listeners for input capture",
      "file": "src\\engine\\InputManager.js",
      "line": 107
    },
    {
      "name": "bindKey",
      "description": "Bind a key to an action @param {string} key - Key code (e.g., 'KeyW', 'Mouse0') @param {string} action - Action name @param {Function} handler - Optional custom handler",
      "file": "src\\engine\\InputManager.js",
      "line": 157
    },
    {
      "name": "registerActionHandler",
      "description": "Register an action handler @param {string} action - Action name @param {Function} handler - Handler function",
      "file": "src\\engine\\InputManager.js",
      "line": 170
    },
    {
      "name": "setContext",
      "description": "Set input context (menu, game, editor) @param {string} context - Input context",
      "file": "src\\engine\\InputManager.js",
      "line": 178
    },
    {
      "name": "registerContextHandler",
      "description": "Register context change handler @param {string} context - Context name @param {Function} handler - Handler function",
      "file": "src\\engine\\InputManager.js",
      "line": 196
    },
    {
      "name": "enableGameControls",
      "description": "Enable game controls (FPS movement, shooting)",
      "file": "src\\engine\\InputManager.js",
      "line": 203
    },
    {
      "name": "_waitForUIReady",
      "description": "Wait for UI to be fully ready before requesting pointer lock",
      "file": "src\\engine\\InputManager.js",
      "line": 235
    },
    {
      "name": "disableGameControls",
      "description": "Disable game controls",
      "file": "src\\engine\\InputManager.js",
      "line": 270
    },
    {
      "name": "enableEditorControls",
      "description": "Enable editor controls",
      "file": "src\\engine\\InputManager.js",
      "line": 283
    },
    {
      "name": "disableEditorControls",
      "description": "Disable editor controls",
      "file": "src\\engine\\InputManager.js",
      "line": 293
    },
    {
      "name": "_handleKeyDown",
      "description": "Handle key down events",
      "file": "src\\engine\\InputManager.js",
      "line": 303
    },
    {
      "name": "_handleKeyUp",
      "description": "Handle key up events",
      "file": "src\\engine\\InputManager.js",
      "line": 356
    },
    {
      "name": "_handleMouseDown",
      "description": "Handle mouse down events",
      "file": "src\\engine\\InputManager.js",
      "line": 381
    },
    {
      "name": "_handleMouseUp",
      "description": "Handle mouse up events",
      "file": "src\\engine\\InputManager.js",
      "line": 405
    },
    {
      "name": "_handleMouseMove",
      "description": "Handle mouse move events",
      "file": "src\\engine\\InputManager.js",
      "line": 424
    },
    {
      "name": "_handleMouseWheel",
      "description": "Handle mouse wheel events",
      "file": "src\\engine\\InputManager.js",
      "line": 444
    },
    {
      "name": "_handleESCKey",
      "description": "Handle ESC key - context-sensitive behavior",
      "file": "src\\engine\\InputManager.js",
      "line": 459
    },
    {
      "name": "_handleTABKey",
      "description": "Handle TAB key - show/hide leaderboard",
      "file": "src\\engine\\InputManager.js",
      "line": 495
    },
    {
      "name": "_handleMouseLook",
      "description": "Handle mouse look for FPS camera",
      "file": "src\\engine\\InputManager.js",
      "line": 514
    },
    {
      "name": "_handleWeaponSwitch",
      "description": "Handle weapon switching",
      "file": "src\\engine\\InputManager.js",
      "line": 523
    },
    {
      "name": "_shouldProcessInput",
      "description": "Check if input should be processed in current context",
      "file": "src\\engine\\InputManager.js",
      "line": 532
    },
    {
      "name": "_isMenuAction",
      "description": "Check if action is a menu action",
      "file": "src\\engine\\InputManager.js",
      "line": 548
    },
    {
      "name": "_isGameAction",
      "description": "Check if action is a game action",
      "file": "src\\engine\\InputManager.js",
      "line": 556
    },
    {
      "name": "_isEditorAction",
      "description": "Check if action is an editor action",
      "file": "src\\engine\\InputManager.js",
      "line": 567
    },
    {
      "name": "_isGameKey",
      "description": "Check if action corresponds to a game key",
      "file": "src\\engine\\InputManager.js",
      "line": 577
    },
    {
      "name": "enablePointerLock",
      "description": "Public method to manually enable pointer lock (for UI use)",
      "file": "src\\engine\\InputManager.js",
      "line": 584
    },
    {
      "name": "requestPointerLockManual",
      "description": "Manually request pointer lock (can be called by user interaction)",
      "file": "src\\engine\\InputManager.js",
      "line": 593
    },
    {
      "name": "requestPointerLock",
      "description": "Safely request pointer lock (public method)",
      "file": "src\\engine\\InputManager.js",
      "line": 616
    },
    {
      "name": "exitPointerLock",
      "description": "Safely exit pointer lock (public method)",
      "file": "src\\engine\\InputManager.js",
      "line": 623
    },
    {
      "name": "isPointerLocked",
      "description": "Check if pointer lock is currently active",
      "file": "src\\engine\\InputManager.js",
      "line": 630
    },
    {
      "name": "isPointerLockSupported",
      "description": "Check if pointer lock is supported",
      "file": "src\\engine\\InputManager.js",
      "line": 637
    },
    {
      "name": "_requestPointerLock",
      "description": "Request pointer lock with debouncing",
      "file": "src\\engine\\InputManager.js",
      "line": 644
    },
    {
      "name": "_exitPointerLock",
      "description": "Exit pointer lock",
      "file": "src\\engine\\InputManager.js",
      "line": 684
    },
    {
      "name": "_handlePointerLockChange",
      "description": "Handle pointer lock change",
      "file": "src\\engine\\InputManager.js",
      "line": 705
    },
    {
      "name": "isKeyPressed",
      "description": "Check if key is currently pressed @param {string} key - Key code @returns {boolean}",
      "file": "src\\engine\\InputManager.js",
      "line": 733
    },
    {
      "name": "isActionActive",
      "description": "Check if action is currently active @param {string} action - Action name @returns {boolean}",
      "file": "src\\engine\\InputManager.js",
      "line": 742
    },
    {
      "name": "getMouseState",
      "description": "Get mouse state @returns {Object} Mouse state",
      "file": "src\\engine\\InputManager.js",
      "line": 761
    },
    {
      "name": "update",
      "description": "Update method - called each frame @param {number} deltaTime - Time since last frame",
      "file": "src\\engine\\InputManager.js",
      "line": 769
    },
    {
      "name": "_doDispose",
      "description": "Cleanup resources",
      "file": "src\\engine\\InputManager.js",
      "line": 779
    }
  ],
  "src\\engine\\MapManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\MapManager.js",
      "line": 11
    },
    {
      "name": "_doInitialize",
      "description": "Initialize the MapManager",
      "file": "src\\engine\\MapManager.js",
      "line": 54
    },
    {
      "name": "registerDefaultMaps",
      "description": "Register default maps that come with the game",
      "file": "src\\engine\\MapManager.js",
      "line": 65
    },
    {
      "name": "setupEventListeners",
      "description": "Set up event listeners for map-related events",
      "file": "src\\engine\\MapManager.js",
      "line": 110
    },
    {
      "name": "onGameStateChanged",
      "description": "Handle game state changes @param {string} newState - New game state @param {string} oldState - Previous game state",
      "file": "src\\engine\\MapManager.js",
      "line": 124
    },
    {
      "name": "loadMap",
      "description": "Load a map by ID @param {string} mapId - Map identifier @returns {Promise<Object>} - Promise resolving to loaded map data",
      "file": "src\\engine\\MapManager.js",
      "line": 139
    },
    {
      "name": "loadMapData",
      "description": "Load map data from file @param {string} mapFile - Path to map file @returns {Promise<Object>} - Promise resolving to map data",
      "file": "src\\engine\\MapManager.js",
      "line": 214
    },
    {
      "name": "validateMapData",
      "description": "Validate map data against rules @param {Object} mapData - Map data to validate @throws {Error} - Throws error if validation fails",
      "file": "src\\engine\\MapManager.js",
      "line": 236
    },
    {
      "name": "loadMapAssets",
      "description": "Load assets required by the map @param {Object} mapData - Map data containing asset requirements @returns {Promise} - Promise resolving when assets are loaded",
      "file": "src\\engine\\MapManager.js",
      "line": 318
    },
    {
      "name": "spawnMapObjects",
      "description": "Spawn map objects in the scene @param {Object} mapData - Map data containing objects to spawn @returns {Promise} - Promise resolving when objects are spawned",
      "file": "src\\engine\\MapManager.js",
      "line": 343
    },
    {
      "name": "spawnBasicObject",
      "description": "Spawn a basic object (box, wall, ground, etc.) @param {Object} objData - Object data @returns {Promise} - Promise resolving when object is spawned",
      "file": "src\\engine\\MapManager.js",
      "line": 380
    },
    {
      "name": "spawnProp",
      "description": "Spawn a prop object @param {Object} propData - Prop data @returns {Promise} - Promise resolving when prop is spawned",
      "file": "src\\engine\\MapManager.js",
      "line": 500
    },
    {
      "name": "spawnSpawnPoints",
      "description": "Spawn visual indicators for spawn points @param {Array} spawnPoints - Array of spawn point data",
      "file": "src\\engine\\MapManager.js",
      "line": 560
    },
    {
      "name": "spawnEntity",
      "description": "Spawn an entity (health pack, weapon, etc.) @param {Object} entityData - Entity data @returns {Promise} - Promise resolving when entity is spawned",
      "file": "src\\engine\\MapManager.js",
      "line": 598
    },
    {
      "name": "addPhysicsToMesh",
      "description": "Add physics to a mesh @param {BABYLON.Mesh} mesh - Mesh to add physics to @param {Object} physicsData - Physics configuration",
      "file": "src\\engine\\MapManager.js",
      "line": 643
    },
    {
      "name": "loadDefaultMap",
      "description": "Load the default map @returns {Promise} - Promise resolving when default map is loaded",
      "file": "src\\engine\\MapManager.js",
      "line": 670
    },
    {
      "name": "unloadCurrentMap",
      "description": "Unload the current map and clean up resources @returns {Promise} - Promise resolving when map is unloaded",
      "file": "src\\engine\\MapManager.js",
      "line": 684
    },
    {
      "name": "getAvailableMaps",
      "description": "Get list of available maps @returns {Array} - Array of map information objects",
      "file": "src\\engine\\MapManager.js",
      "line": 724
    },
    {
      "name": "getCurrentMap",
      "description": "Get current map information @returns {Object|null} - Current map data or null if no map loaded",
      "file": "src\\engine\\MapManager.js",
      "line": 732
    },
    {
      "name": "getCurrentMapId",
      "description": "Get current map ID @returns {string|null} - Current map ID or null if no map loaded",
      "file": "src\\engine\\MapManager.js",
      "line": 740
    },
    {
      "name": "isMapLoaded",
      "description": "Check if a map is currently loaded @returns {boolean} - True if a map is loaded",
      "file": "src\\engine\\MapManager.js",
      "line": 748
    },
    {
      "name": "getLoadingProgress",
      "description": "Get loading progress @returns {Object} - Loading progress information",
      "file": "src\\engine\\MapManager.js",
      "line": 756
    },
    {
      "name": "updateLoadingProgress",
      "description": "Update loading progress and notify callbacks @param {string} stage - Current loading stage @param {number} progress - Progress percentage (0-100) @param {string} message - Progress message",
      "file": "src\\engine\\MapManager.js",
      "line": 766
    },
    {
      "name": "registerMap",
      "description": "Register a custom map @param {Object} mapInfo - Map information object",
      "file": "src\\engine\\MapManager.js",
      "line": 780
    },
    {
      "name": "unregisterMap",
      "description": "Unregister a map @param {string} mapId - Map ID to unregister",
      "file": "src\\engine\\MapManager.js",
      "line": 793
    },
    {
      "name": "setCallbacks",
      "description": "Set event callbacks @param {Object} callbacks - Object containing callback functions",
      "file": "src\\engine\\MapManager.js",
      "line": 804
    },
    {
      "name": "_doDispose",
      "description": "Dispose of the MapManager and clean up resources",
      "file": "src\\engine\\MapManager.js",
      "line": 814
    }
  ],
  "src\\engine\\NetworkManager.backup.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 11
    },
    {
      "name": "initializeMessageHandlers",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 72
    },
    {
      "name": "connect",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 78
    },
    {
      "name": "loadSocketIO",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 111
    },
    {
      "name": "setupSocketHandlers",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 121
    },
    {
      "name": "disconnect",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 185
    },
    {
      "name": "handleDisconnection",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 205
    },
    {
      "name": "attemptReconnection",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 222
    },
    {
      "name": "cleanup",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 250
    },
    {
      "name": "registerMessageHandler",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 272
    },
    {
      "name": "handleMessage",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 276
    },
    {
      "name": "emit",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 295
    },
    {
      "name": "sendMessage",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 312
    },
    {
      "name": "handleConnectionEstablished",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 317
    },
    {
      "name": "handleConnectionRejected",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 338
    },
    {
      "name": "handlePlayerJoined",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 349
    },
    {
      "name": "handleNewPlayerConnected",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 370
    },
    {
      "name": "handlePlayerDisconnected",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 381
    },
    {
      "name": "handlePlayerMoved",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 398
    },
    {
      "name": "handlePlayerKilled",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 408
    },
    {
      "name": "handlePlayerRespawned",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 430
    },
    {
      "name": "handlePlayerDamaged",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 449
    },
    {
      "name": "handlePlayerHealthUpdated",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 457
    },
    {
      "name": "handlePlayerUsernameUpdated",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 464
    },
    {
      "name": "createRemotePlayer",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 471
    },
    {
      "name": "handlePlayerLeft",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 484
    },
    {
      "name": "handlePlayerState",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 495
    },
    {
      "name": "handleGameState",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 508
    },
    {
      "name": "handleWorldUpdate",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 515
    },
    {
      "name": "handlePlayerShot",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 522
    },
    {
      "name": "handlePlayerHit",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 529
    },
    {
      "name": "handlePlayerDeath",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 536
    },
    {
      "name": "handleWeaponPickup",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 543
    },
    {
      "name": "handlePing",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 550
    },
    {
      "name": "handlePong",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 558
    },
    {
      "name": "handleNetworkError",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 565
    },
    {
      "name": "updateLocalPlayerState",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 574
    },
    {
      "name": "getInterpolatedPlayerState",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 599
    },
    {
      "name": "updateLocalPlayerState",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 621
    },
    {
      "name": "startPingMonitoring",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 646
    },
    {
      "name": "getNetworkStats",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 651
    },
    {
      "name": "setLocalPlayer",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 662
    },
    {
      "name": "getRemotePlayers",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 666
    },
    {
      "name": "getPlayerState",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 670
    },
    {
      "name": "broadcastGameEvent",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 674
    },
    {
      "name": "update",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 686
    },
    {
      "name": "_doDispose",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.backup.js",
      "line": 704
    }
  ],
  "src\\engine\\NetworkManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\NetworkManager.js",
      "line": 14
    },
    {
      "name": "initializeComponents",
      "description": "Initialize all network components",
      "file": "src\\engine\\NetworkManager.js",
      "line": 48
    },
    {
      "name": "registerMessageHandlers",
      "description": "Register all message handlers",
      "file": "src\\engine\\NetworkManager.js",
      "line": 78
    },
    {
      "name": "connect",
      "description": "Connect to the server @param {string} playerName - Player name for connection @returns {Promise} Promise resolving when connected",
      "file": "src\\engine\\NetworkManager.js",
      "line": 123
    },
    {
      "name": "disconnect",
      "description": "Disconnect from the server",
      "file": "src\\engine\\NetworkManager.js",
      "line": 164
    },
    {
      "name": "emit",
      "description": "Emit an event to the server @param {string} event - Event name @param {*} data - Data to send @returns {Promise} Promise resolving when sent",
      "file": "src\\engine\\NetworkManager.js",
      "line": 175
    },
    {
      "name": "sendMessage",
      "description": "Legacy sendMessage method for compatibility @param {string} type - Message type @param {*} data - Message data @returns {Promise} Promise resolving when sent",
      "file": "src\\engine\\NetworkManager.js",
      "line": 192
    },
    {
      "name": "handleConnectionEstablished",
      "description": "Handle connection established @param {Object} data - Connection data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 200
    },
    {
      "name": "handleConnectionRejected",
      "description": "Handle connection rejected @param {Object} data - Rejection data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 220
    },
    {
      "name": "handleDisconnection",
      "description": "Handle disconnection @param {string} reason - Disconnection reason",
      "file": "src\\engine\\NetworkManager.js",
      "line": 232
    },
    {
      "name": "handleNetworkError",
      "description": "Handle network error @param {Error|Object} error - Error object or data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 249
    },
    {
      "name": "handleGameState",
      "description": "Handle game state updates @param {Object} data - Game state data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 261
    },
    {
      "name": "handleWorldUpdate",
      "description": "Handle world updates @param {Object} data - World update data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 271
    },
    {
      "name": "handlePlayerShot",
      "description": "Handle player shot events @param {Object} data - Shot event data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 281
    },
    {
      "name": "handlePlayerHit",
      "description": "Handle player hit events @param {Object} data - Hit event data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 291
    },
    {
      "name": "handlePlayerDeath",
      "description": "Handle player death events @param {Object} data - Death event data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 301
    },
    {
      "name": "handleWeaponPickup",
      "description": "Handle weapon pickup events @param {Object} data - Pickup event data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 311
    },
    {
      "name": "handlePing",
      "description": "Handle ping requests @param {Object} data - Ping data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 321
    },
    {
      "name": "setLocalPlayer",
      "description": "Set local player reference @param {Object} player - Local player object",
      "file": "src\\engine\\NetworkManager.js",
      "line": 335
    },
    {
      "name": "getRemotePlayers",
      "description": "Get all remote players @returns {Array} Array of remote players",
      "file": "src\\engine\\NetworkManager.js",
      "line": 343
    },
    {
      "name": "getPlayerState",
      "description": "Get player state by ID @param {string} playerId - Player ID @returns {Object|null} Player state or null",
      "file": "src\\engine\\NetworkManager.js",
      "line": 352
    },
    {
      "name": "updateLocalPlayerState",
      "description": "Update local player state @param {Object} playerState - Current player state",
      "file": "src\\engine\\NetworkManager.js",
      "line": 360
    },
    {
      "name": "broadcastGameEvent",
      "description": "Broadcast game event @param {string} eventType - Event type @param {Object} eventData - Event data",
      "file": "src\\engine\\NetworkManager.js",
      "line": 369
    },
    {
      "name": "getNetworkStats",
      "description": "Get network statistics @returns {Object} Network statistics",
      "file": "src\\engine\\NetworkManager.js",
      "line": 384
    },
    {
      "name": "_doUpdate",
      "description": "Update method called from game loop @param {number} deltaTime - Time since last update",
      "file": "src\\engine\\NetworkManager.js",
      "line": 401
    },
    {
      "name": "_doDispose",
      "description": "Dispose of the network manager",
      "file": "src\\engine\\NetworkManager.js",
      "line": 416
    }
  ],
  "src\\engine\\ProjectileManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 9
    },
    {
      "name": "initialize",
      "description": "Initialize the projectile manager",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 53
    },
    {
      "name": "initializeGlowLayer",
      "description": "Initialize glow layer for enhanced projectile visibility",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 70
    },
    {
      "name": "fireProjectile",
      "description": "Fire a new projectile",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 89
    },
    {
      "name": "validateProjectileData",
      "description": "Validate projectile data",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 145
    },
    {
      "name": "generateProjectileId",
      "description": "Generate unique projectile ID",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 157
    },
    {
      "name": "update",
      "description": "Update all active projectiles",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 165
    },
    {
      "name": "removeProjectile",
      "description": "Remove a projectile from active list",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 186
    },
    {
      "name": "performPeriodicCleanup",
      "description": "Perform periodic cleanup of old projectiles",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 213
    },
    {
      "name": "updateHitRate",
      "description": "Update hit rate calculation",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 243
    },
    {
      "name": "getStats",
      "description": "Get current statistics",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 252
    },
    {
      "name": "getActiveProjectiles",
      "description": "Get list of active projectiles",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 264
    },
    {
      "name": "configure",
      "description": "Configure projectile manager settings",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 275
    },
    {
      "name": "testProjectile",
      "description": "Test function to create a visible projectile",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 286
    },
    {
      "name": "setupNetworkHandlers",
      "description": "Setup network event handlers",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 312
    },
    {
      "name": "sendProjectileToServer",
      "description": "Send projectile to server",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 339
    },
    {
      "name": "handleServerProjectileHit",
      "description": "Handle projectile hit from server",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 366
    },
    {
      "name": "handleServerProjectileCreated",
      "description": "Handle projectile creation from server (other players)",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 378
    },
    {
      "name": "flushPendingProjectiles",
      "description": "Flush pending projectiles when coming online",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 398
    },
    {
      "name": "processNetworkQueue",
      "description": "Process network queue",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 408
    },
    {
      "name": "setupCleanupTimer",
      "description": "Setup cleanup timer",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 440
    },
    {
      "name": "clearAllProjectiles",
      "description": "Clear all projectiles (for level reset, etc.)",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 448
    },
    {
      "name": "getProjectile",
      "description": "Get projectile by ID",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 466
    },
    {
      "name": "hasProjectile",
      "description": "Check if projectile exists",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 473
    },
    {
      "name": "getPerformanceMetrics",
      "description": "Get performance metrics",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 480
    },
    {
      "name": "dispose",
      "description": "Clean up resources",
      "file": "src\\engine\\ProjectileManager.js",
      "line": 495
    }
  ],
  "src\\engine\\StateManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\StateManager.js",
      "line": 18
    },
    {
      "name": "_initializeStateHandlers",
      "description": "Initialize default state handlers",
      "file": "src\\engine\\StateManager.js",
      "line": 32
    },
    {
      "name": "registerStateHandler",
      "description": "Register a state handler @param {string} state - The state name @param {Object} handler - Handler with enter/exit methods",
      "file": "src\\engine\\StateManager.js",
      "line": 175
    },
    {
      "name": "transitionTo",
      "description": "Transition to a new state @param {string} newState - The target state @returns {Promise<boolean>} - Success of transition",
      "file": "src\\engine\\StateManager.js",
      "line": 187
    },
    {
      "name": "getCurrentState",
      "description": "Get current state @returns {string} Current state",
      "file": "src\\engine\\StateManager.js",
      "line": 252
    },
    {
      "name": "getPreviousState",
      "description": "Get previous state @returns {string} Previous state",
      "file": "src\\engine\\StateManager.js",
      "line": 260
    },
    {
      "name": "isInState",
      "description": "Check if currently in a specific state @param {string} state - State to check @returns {boolean}",
      "file": "src\\engine\\StateManager.js",
      "line": 269
    },
    {
      "name": "update",
      "description": "Update method for game loop @param {number} deltaTime - Time since last frame",
      "file": "src\\engine\\StateManager.js",
      "line": 277
    },
    {
      "name": "_handleEscapeKey",
      "description": "Handle ESC key for pausing/unpausing",
      "file": "src\\engine\\StateManager.js",
      "line": 285
    },
    {
      "name": "_handleEscapePress",
      "description": "Handle escape key press",
      "file": "src\\engine\\StateManager.js",
      "line": 302
    },
    {
      "name": "_isValidState",
      "description": "Check if state is valid @param {string} state - State to validate @returns {boolean}",
      "file": "src\\engine\\StateManager.js",
      "line": 323
    },
    {
      "name": "_isValidTransition",
      "description": "Validate state transition @param {string} fromState - Current state @param {string} toState - Target state @returns {boolean}",
      "file": "src\\engine\\StateManager.js",
      "line": 333
    },
    {
      "name": "_doDispose",
      "description": "Cleanup resources",
      "file": "src\\engine\\StateManager.js",
      "line": 369
    }
  ],
  "src\\engine\\UIManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\UIManager.js",
      "line": 12
    },
    {
      "name": "_initializeGUI",
      "description": "Initialize Babylon.js GUI system",
      "file": "src\\engine\\UIManager.js",
      "line": 44
    },
    {
      "name": "showLoadingScreen",
      "description": "Show loading screen with progress",
      "file": "src\\engine\\UIManager.js",
      "line": 54
    },
    {
      "name": "updateLoadingProgress",
      "description": "Update loading progress @param {number} progress - Progress percentage (0-100) @param {string} text - Loading text",
      "file": "src\\engine\\UIManager.js",
      "line": 133
    },
    {
      "name": "hideLoadingScreen",
      "description": "Hide loading screen",
      "file": "src\\engine\\UIManager.js",
      "line": 161
    },
    {
      "name": "showMainMenu",
      "description": "Show main menu with LoadingImage.png background",
      "file": "src\\engine\\UIManager.js",
      "line": 171
    },
    {
      "name": "hideMainMenu",
      "description": "Hide main menu",
      "file": "src\\engine\\UIManager.js",
      "line": 267
    },
    {
      "name": "showSettingsOverlay",
      "description": "Show settings overlay (ESC menu) - using right panel design",
      "file": "src\\engine\\UIManager.js",
      "line": 277
    },
    {
      "name": "hideSettingsOverlay",
      "description": "Hide settings overlay",
      "file": "src\\engine\\UIManager.js",
      "line": 353
    },
    {
      "name": "showLeaderboard",
      "description": "Show leaderboard (TAB menu) - using right panel design",
      "file": "src\\engine\\UIManager.js",
      "line": 364
    },
    {
      "name": "hideLeaderboard",
      "description": "Hide leaderboard",
      "file": "src\\engine\\UIManager.js",
      "line": 466
    },
    {
      "name": "showGameHUD",
      "description": "Show game HUD",
      "file": "src\\engine\\UIManager.js",
      "line": 476
    },
    {
      "name": "hideGameHUD",
      "description": "Hide game HUD",
      "file": "src\\engine\\UIManager.js",
      "line": 532
    },
    {
      "name": "showMapEditor",
      "description": "Show map editor UI",
      "file": "src\\engine\\UIManager.js",
      "line": 542
    },
    {
      "name": "hideMapEditor",
      "description": "Hide map editor UI",
      "file": "src\\engine\\UIManager.js",
      "line": 649
    },
    {
      "name": "updateHUD",
      "description": "Update HUD elements @param {Object} gameState - Current game state",
      "file": "src\\engine\\UIManager.js",
      "line": 660
    },
    {
      "name": "update",
      "description": "Per-frame update for UIManager. Call this every frame from the game loop. Includes HUD updates and any other UI elements that need to be updated constantly. @param {Object} gameState - Current game state (optional, for HUD)",
      "file": "src\\engine\\UIManager.js",
      "line": 681
    },
    {
      "name": "showFlowstateMessage",
      "description": "Show flowstate message (kill-streak notification) @param {string} message - Message to display @param {number} duration - Duration in milliseconds",
      "file": "src\\engine\\UIManager.js",
      "line": 695
    },
    {
      "name": "_createCleanMenuButton",
      "description": "Create a clean menu button for the right panel @param {string} text - Button text @param {Function} onClick - Click handler @returns {BABYLON.GUI.Button} Button control",
      "file": "src\\engine\\UIManager.js",
      "line": 720
    },
    {
      "name": "_createMenuButton",
      "description": "Create a menu button (legacy method for settings) @param {string} text - Button text @param {Function} onClick - Click handler @returns {BABYLON.GUI.Button} Button control",
      "file": "src\\engine\\UIManager.js",
      "line": 757
    },
    {
      "name": "_createCleanSettingsSection",
      "description": "Create clean settings section header @param {BABYLON.GUI.Container} container - Parent container @param {string} title - Section title",
      "file": "src\\engine\\UIManager.js",
      "line": 788
    },
    {
      "name": "_createCleanSliderSetting",
      "description": "Create clean slider setting @param {BABYLON.GUI.Container} container - Parent container @param {string} label - Setting label @param {number} defaultValue - Default value @param {Function} onChange - Change handler @param {number} min - Minimum value @param {number} max - Maximum value",
      "file": "src\\engine\\UIManager.js",
      "line": 810
    },
    {
      "name": "_createSettingsSection",
      "description": "Create settings section header (legacy) @param {BABYLON.GUI.Container} container - Parent container @param {string} title - Section title",
      "file": "src\\engine\\UIManager.js",
      "line": 865
    },
    {
      "name": "_createSliderSetting",
      "description": "Create slider setting @param {BABYLON.GUI.Container} container - Parent container @param {string} label - Setting label @param {number} defaultValue - Default value @param {Function} onChange - Change handler @param {number} min - Minimum value @param {number} max - Maximum value",
      "file": "src\\engine\\UIManager.js",
      "line": 886
    },
    {
      "name": "_createCleanSettingsSection",
      "description": "Create clean settings section header with theme colors @param {BABYLON.GUI.Container} container - Parent container @param {string} title - Section title",
      "file": "src\\engine\\UIManager.js",
      "line": 920
    },
    {
      "name": "_createCleanSliderSetting",
      "description": "Create clean slider setting with theme colors @param {BABYLON.GUI.Container} container - Parent container @param {string} label - Setting label @param {number} defaultValue - Default value @param {Function} onChange - Change handler @param {number} min - Minimum value @param {number} max - Maximum value",
      "file": "src\\engine\\UIManager.js",
      "line": 941
    },
    {
      "name": "updateLeaderboardData",
      "description": "Update leaderboard with new data (for real-time updates) @param {Array} playerData - Array of player data objects",
      "file": "src\\engine\\UIManager.js",
      "line": 974
    },
    {
      "name": "_getLeaderboardData",
      "description": "Get leaderboard data with comprehensive player statistics @returns {Array} Array of player data objects",
      "file": "src\\engine\\UIManager.js",
      "line": 987
    },
    {
      "name": "_createLeaderboardEntry",
      "description": "Create enhanced leaderboard entry with kill/death statistics @param {BABYLON.GUI.Container} container - Parent container @param {Object} player - Player data @param {boolean} isFirst - Whether this is first place",
      "file": "src\\engine\\UIManager.js",
      "line": 1091
    },
    {
      "name": "onStateChange",
      "description": "Handle game state changes to control cursor visibility @param {string} newState - The new game state",
      "file": "src\\engine\\UIManager.js",
      "line": 1169
    },
    {
      "name": "onResize",
      "description": "Handle window resize",
      "file": "src\\engine\\UIManager.js",
      "line": 1187
    },
    {
      "name": "showError",
      "description": "Show error message to user @param {string} message - Error message to display",
      "file": "src\\engine\\UIManager.js",
      "line": 1235
    },
    {
      "name": "_doDispose",
      "description": "Cleanup resources",
      "file": "src\\engine\\UIManager.js",
      "line": 1244
    },
    {
      "name": "_addSectionTitle",
      "description": "Add a section title inside the settings panel @param {BABYLON.GUI.Container} container @param {string} title",
      "file": "src\\engine\\UIManager.js",
      "line": 1265
    },
    {
      "name": "_addSliderSetting",
      "description": "Add an interactive slider setting row @param {BABYLON.GUI.Container} container @param {string} label @param {number} defaultValue @param {Function} onChange @param {number} min @param {number} max",
      "file": "src\\engine\\UIManager.js",
      "line": 1287
    },
    {
      "name": "_createDropdownSetting",
      "description": "Generic dropdown setting builder @param {BABYLON.GUI.Container} container @param {string} label @param {Array<{label: string, value: any}>} options @param {number} defaultIndex @param {Function} onSelect  (selectedOption) => void",
      "file": "src\\engine\\UIManager.js",
      "line": 1342
    },
    {
      "name": "_createWeaponSelector",
      "description": "Build weapon selector dropdown (primary weapons only) @param {BABYLON.GUI.Container} container",
      "file": "src\\engine\\UIManager.js",
      "line": 1493
    },
    {
      "name": "_populateSettingsContent",
      "description": "Build the revamped settings content @param {BABYLON.GUI.Container} container",
      "file": "src\\engine\\UIManager.js",
      "line": 1541
    }
  ],
  "src\\engine\\network\\NetworkConnection.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 9
    },
    {
      "name": "connect",
      "description": "Connect to the server @param {string} playerName - Player name for connection @returns {Promise} Promise resolving when connected",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 35
    },
    {
      "name": "loadSocketIO",
      "description": "Load Socket.IO client library @returns {Promise} Promise resolving when library is loaded",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 70
    },
    {
      "name": "setupConnectionHandlers",
      "description": "Set up basic connection event handlers @param {Function} resolve - Promise resolve function @param {Function} reject - Promise reject function",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 85
    },
    {
      "name": "on",
      "description": "Register additional event handler on the socket @param {string} event - Event name @param {Function} handler - Event handler function",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 122
    },
    {
      "name": "emit",
      "description": "Emit an event to the server @param {string} event - Event name @param {*} data - Data to send @returns {Promise} Promise resolving when sent",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 134
    },
    {
      "name": "disconnect",
      "description": "Disconnect from the server",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 152
    },
    {
      "name": "handleDisconnection",
      "description": "Handle disconnection event @param {Object} event - Disconnection event data",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 175
    },
    {
      "name": "attemptReconnection",
      "description": "Attempt to reconnect to the server",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 195
    },
    {
      "name": "cleanup",
      "description": "Clean up connection state",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 224
    },
    {
      "name": "getStatus",
      "description": "Get connection status @returns {Object} Connection status information",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 232
    },
    {
      "name": "dispose",
      "description": "Dispose of the connection",
      "file": "src\\engine\\network\\NetworkConnection.js",
      "line": 243
    }
  ],
  "src\\engine\\network\\NetworkMessageHandler.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 7
    },
    {
      "name": "registerHandler",
      "description": "Register a message handler for a specific message type @param {string} messageType - Type of message to handle @param {Function} handler - Handler function",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 26
    },
    {
      "name": "unregisterHandler",
      "description": "Unregister a message handler @param {string} messageType - Type of message to unregister",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 34
    },
    {
      "name": "handleMessage",
      "description": "Handle incoming message @param {string} data - Raw message data",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 42
    },
    {
      "name": "processMessage",
      "description": "Process a structured message object @param {Object} message - Message object with type and data",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 64
    },
    {
      "name": "createMessage",
      "description": "Create a message object @param {string} type - Message type @param {*} data - Message data @param {string} targetId - Optional target player ID @returns {Object} Message object",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 86
    },
    {
      "name": "generateMessageId",
      "description": "Generate unique message ID @returns {string} Unique message ID",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 105
    },
    {
      "name": "queueMessage",
      "description": "Queue a message for later processing @param {Object} message - Message to queue",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 113
    },
    {
      "name": "processQueuedMessages",
      "description": "Process all queued messages",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 120
    },
    {
      "name": "addPendingMessage",
      "description": "Add a message to pending messages (waiting for response) @param {string} messageId - Message ID @param {Object} messageData - Message data",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 132
    },
    {
      "name": "removePendingMessage",
      "description": "Remove a pending message @param {string} messageId - Message ID to remove @returns {Object|null} Removed message data or null",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 144
    },
    {
      "name": "cleanupPendingMessages",
      "description": "Clean up old pending messages @param {number} maxAge - Maximum age in milliseconds (default: 30 seconds)",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 157
    },
    {
      "name": "getStats",
      "description": "Get message statistics @returns {Object} Message statistics",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 180
    },
    {
      "name": "resetStats",
      "description": "Reset statistics",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 195
    },
    {
      "name": "updateSentStats",
      "description": "Update sent message statistics @param {number} bytes - Number of bytes sent",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 206
    },
    {
      "name": "getRegisteredTypes",
      "description": "Get all registered message types @returns {Array<string>} Array of registered message types",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 215
    },
    {
      "name": "clearHandlers",
      "description": "Clear all message handlers",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 222
    },
    {
      "name": "dispose",
      "description": "Dispose of the message handler",
      "file": "src\\engine\\network\\NetworkMessageHandler.js",
      "line": 229
    }
  ],
  "src\\engine\\network\\NetworkPlayerManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 9
    },
    {
      "name": "setLocalPlayer",
      "description": "Set the local player reference @param {Object} player - Local player object",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 32
    },
    {
      "name": "handlePlayerJoined",
      "description": "Handle player joined event @param {Object} data - Player join data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 40
    },
    {
      "name": "handleNewPlayerConnected",
      "description": "Handle new player connected event @param {Object} playerData - New player data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 70
    },
    {
      "name": "handlePlayerDisconnected",
      "description": "Handle player disconnected event @param {string} playerId - ID of disconnected player",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 87
    },
    {
      "name": "handlePlayerMoved",
      "description": "Handle player movement event @param {Object} data - Movement data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 108
    },
    {
      "name": "handlePlayerKilled",
      "description": "Handle player killed event @param {Object} data - Kill event data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 122
    },
    {
      "name": "handlePlayerRespawned",
      "description": "Handle player respawned event @param {Object} data - Respawn event data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 148
    },
    {
      "name": "handlePlayerDamaged",
      "description": "Handle player damaged event @param {Object} data - Damage event data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 171
    },
    {
      "name": "handlePlayerHealthUpdated",
      "description": "Handle player health updated event @param {Object} data - Health update data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 183
    },
    {
      "name": "handlePlayerUsernameUpdated",
      "description": "Handle player username updated event @param {Object} data - Username update data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 194
    },
    {
      "name": "createRemotePlayer",
      "description": "Create a remote player @param {Object} playerData - Player data @returns {RemotePlayer} Created remote player",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 206
    },
    {
      "name": "updateLocalPlayerState",
      "description": "Update local player state to server @param {Object} playerState - Current player state",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 240
    },
    {
      "name": "handlePlayerState",
      "description": "Handle player state update @param {Object} data - Player state data",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 268
    },
    {
      "name": "getInterpolatedPlayerState",
      "description": "Get interpolated player state @param {string} playerId - Player ID @returns {Object|null} Interpolated player state or null",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 286
    },
    {
      "name": "getRemotePlayers",
      "description": "Get all remote players @returns {Array<RemotePlayer>} Array of remote players",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 311
    },
    {
      "name": "getPlayerState",
      "description": "Get player state by ID @param {string} playerId - Player ID @returns {Object|null} Player state or null",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 320
    },
    {
      "name": "setTickRate",
      "description": "Set state update interval @param {number} tickRate - Updates per second",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 328
    },
    {
      "name": "setInterpolationDelay",
      "description": "Set interpolation delay @param {number} delay - Delay in milliseconds",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 336
    },
    {
      "name": "update",
      "description": "Update method called from game loop @param {number} deltaTime - Time since last update",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 344
    },
    {
      "name": "dispose",
      "description": "Dispose of the player manager",
      "file": "src\\engine\\network\\NetworkPlayerManager.js",
      "line": 372
    }
  ],
  "src\\engine\\network\\NetworkStats.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 7
    },
    {
      "name": "startPingMonitoring",
      "description": "Start ping monitoring @param {Function} sendPing - Function to send ping messages @param {number} interval - Ping interval in milliseconds (default: 5000)",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 44
    },
    {
      "name": "stopPingMonitoring",
      "description": "Stop ping monitoring",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 63
    },
    {
      "name": "handlePong",
      "description": "Handle pong response @param {Object} data - Pong data with timestamp",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 76
    },
    {
      "name": "trackSentPacket",
      "description": "Track a sent packet for packet loss calculation @param {string} packetId - Unique packet identifier @param {number} timestamp - Send timestamp",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 106
    },
    {
      "name": "trackReceivedPacket",
      "description": "Track a received packet @param {string} packetId - Unique packet identifier",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 115
    },
    {
      "name": "updateBandwidth",
      "description": "Update bandwidth statistics @param {number} bytesReceived - Bytes received since last update @param {number} bytesSent - Bytes sent since last update",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 127
    },
    {
      "name": "calculatePacketLoss",
      "description": "Calculate packet loss percentage @returns {number} Packet loss percentage (0-100)",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 158
    },
    {
      "name": "getAveragePing",
      "description": "Get average ping from history @param {number} samples - Number of recent samples to average (default: 10) @returns {number} Average ping in milliseconds",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 184
    },
    {
      "name": "getBandwidthUsage",
      "description": "Get current bandwidth usage @returns {Object} Bandwidth information",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 197
    },
    {
      "name": "updateConnectionQuality",
      "description": "Update connection quality based on current metrics",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 226
    },
    {
      "name": "getConnectionQuality",
      "description": "Get connection quality @returns {string} Connection quality rating",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 245
    },
    {
      "name": "getStats",
      "description": "Get comprehensive network statistics @returns {Object} Complete network statistics",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 253
    },
    {
      "name": "setConnectionTime",
      "description": "Set connection start time @param {number} timestamp - Connection timestamp",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 270
    },
    {
      "name": "reset",
      "description": "Reset all statistics",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 277
    },
    {
      "name": "update",
      "description": "Update method called from game loop @param {number} deltaTime - Time since last update",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 300
    },
    {
      "name": "dispose",
      "description": "Dispose of the stats tracker",
      "file": "src\\engine\\network\\NetworkStats.js",
      "line": 318
    }
  ],
  "src\\entities\\Player.js": [
    {
      "name": "initialize",
      "description": "Initialize the player",
      "file": "src\\entities\\Player.js",
      "line": 88
    },
    {
      "name": "createCamera",
      "description": "Create FPS camera using UniversalCamera",
      "file": "src\\entities\\Player.js",
      "line": 123
    },
    {
      "name": "attachControls",
      "description": "Attach camera controls for game mode",
      "file": "src\\entities\\Player.js",
      "line": 153
    },
    {
      "name": "detachControls",
      "description": "Detach camera controls",
      "file": "src\\entities\\Player.js",
      "line": 164
    },
    {
      "name": "createWeaponAttachPoint",
      "description": "Create weapon attachment point",
      "file": "src\\entities\\Player.js",
      "line": 174
    },
    {
      "name": "loadDefaultWeapons",
      "description": "Load default weapons",
      "file": "src\\entities\\Player.js",
      "line": 190
    },
    {
      "name": "equipWeapon",
      "description": "Equip weapon by slot name",
      "file": "src\\entities\\Player.js",
      "line": 241
    },
    {
      "name": "switchWeapon",
      "description": "Switch to next weapon",
      "file": "src\\entities\\Player.js",
      "line": 277
    },
    {
      "name": "setWeapon",
      "description": "Set weapon type for primary slot (called from settings menu)",
      "file": "src\\entities\\Player.js",
      "line": 288
    },
    {
      "name": "setMovementInput",
      "description": "Set movement input state",
      "file": "src\\entities\\Player.js",
      "line": 320
    },
    {
      "name": "handleMouseLook",
      "description": "Handle mouse look for FPS camera",
      "file": "src\\entities\\Player.js",
      "line": 329
    },
    {
      "name": "jump",
      "description": "Jump",
      "file": "src\\entities\\Player.js",
      "line": 350
    },
    {
      "name": "checkCrouched",
      "description": "Check if player can stand up (no obstacle above head) Returns true if there is enough clearance to stand, false if blocked",
      "file": "src\\entities\\Player.js",
      "line": 363
    },
    {
      "name": "setCrouch",
      "description": "Set crouch state",
      "file": "src\\entities\\Player.js",
      "line": 392
    },
    {
      "name": "setSprint",
      "description": "Set sprint state",
      "file": "src\\entities\\Player.js",
      "line": 413
    },
    {
      "name": "setAiming",
      "description": "Set aiming state",
      "file": "src\\entities\\Player.js",
      "line": 420
    },
    {
      "name": "startFiring",
      "description": "Start firing current weapon",
      "file": "src\\entities\\Player.js",
      "line": 432
    },
    {
      "name": "stopFiring",
      "description": "Stop firing current weapon",
      "file": "src\\entities\\Player.js",
      "line": 442
    },
    {
      "name": "fireWeapon",
      "description": "Fire current weapon",
      "file": "src\\entities\\Player.js",
      "line": 449
    },
    {
      "name": "reload",
      "description": "Reload current weapon",
      "file": "src\\entities\\Player.js",
      "line": 476
    },
    {
      "name": "getCurrentAmmo",
      "description": "Get current ammo",
      "file": "src\\entities\\Player.js",
      "line": 496
    },
    {
      "name": "getMaxAmmo",
      "description": "Get max ammo",
      "file": "src\\entities\\Player.js",
      "line": 503
    },
    {
      "name": "setCurrentAmmo",
      "description": "Set current ammo",
      "file": "src\\entities\\Player.js",
      "line": 510
    },
    {
      "name": "setMaxAmmo",
      "description": "Set max ammo",
      "file": "src\\entities\\Player.js",
      "line": 517
    },
    {
      "name": "update",
      "description": "Update player (called each frame)",
      "file": "src\\entities\\Player.js",
      "line": 524
    },
    {
      "name": "updateNetworkSync",
      "description": "Update network synchronization",
      "file": "src\\entities\\Player.js",
      "line": 550
    },
    {
      "name": "updateMovement",
      "description": "Update player movement with smooth physics",
      "file": "src\\entities\\Player.js",
      "line": 591
    },
    {
      "name": "updateGroundCheck",
      "description": "Update ground check",
      "file": "src\\entities\\Player.js",
      "line": 652
    },
    {
      "name": "getPosition",
      "description": "Get player position",
      "file": "src\\entities\\Player.js",
      "line": 691
    },
    {
      "name": "getDirection",
      "description": "Get camera direction",
      "file": "src\\entities\\Player.js",
      "line": 698
    },
    {
      "name": "getCurrentWeapon",
      "description": "Get current weapon",
      "file": "src\\entities\\Player.js",
      "line": 706
    },
    {
      "name": "takeDamage",
      "description": "Take damage",
      "file": "src\\entities\\Player.js",
      "line": 713
    },
    {
      "name": "heal",
      "description": "Heal player",
      "file": "src\\entities\\Player.js",
      "line": 731
    },
    {
      "name": "onDeath",
      "description": "Handle player death",
      "file": "src\\entities\\Player.js",
      "line": 739
    },
    {
      "name": "respawn",
      "description": "Respawn player",
      "file": "src\\entities\\Player.js",
      "line": 754
    },
    {
      "name": "dispose",
      "description": "Dispose of player resources",
      "file": "src\\entities\\Player.js",
      "line": 776
    }
  ],
  "src\\entities\\Projectile.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\entities\\Projectile.js",
      "line": 9
    },
    {
      "name": "generateId",
      "description": "Generate unique projectile ID",
      "file": "src\\entities\\Projectile.js",
      "line": 74
    },
    {
      "name": "createVisuals",
      "description": "Create visual representation of the projectile",
      "file": "src\\entities\\Projectile.js",
      "line": 81
    },
    {
      "name": "createTrail",
      "description": "Create particle trail effect",
      "file": "src\\entities\\Projectile.js",
      "line": 138
    },
    {
      "name": "update",
      "description": "Update projectile position and check for collisions",
      "file": "src\\entities\\Projectile.js",
      "line": 179
    },
    {
      "name": "checkCollision",
      "description": "Check for collisions using raycast",
      "file": "src\\entities\\Projectile.js",
      "line": 212
    },
    {
      "name": "processHit",
      "description": "Process collision hit",
      "file": "src\\entities\\Projectile.js",
      "line": 232
    },
    {
      "name": "createHitEffects",
      "description": "Create visual effects at hit location",
      "file": "src\\entities\\Projectile.js",
      "line": 257
    },
    {
      "name": "createBloodSplatter",
      "description": "Create blood splatter effect",
      "file": "src\\entities\\Projectile.js",
      "line": 294
    },
    {
      "name": "applyDamage",
      "description": "Apply damage to hit target",
      "file": "src\\entities\\Projectile.js",
      "line": 323
    },
    {
      "name": "checkLimits",
      "description": "Check lifetime and distance limits",
      "file": "src\\entities\\Projectile.js",
      "line": 347
    },
    {
      "name": "getStats",
      "description": "Get projectile statistics",
      "file": "src\\entities\\Projectile.js",
      "line": 368
    },
    {
      "name": "dispose",
      "description": "Clean up resources",
      "file": "src\\entities\\Projectile.js",
      "line": 385
    }
  ],
  "src\\entities\\RemotePlayer.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 10
    },
    {
      "name": "initialize",
      "description": "Initialize the remote player visual representation",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 58
    },
    {
      "name": "createPlayerMesh",
      "description": "Create the visual mesh for the remote player",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 92
    },
    {
      "name": "createNameTag",
      "description": "Create name tag above the player",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 119
    },
    {
      "name": "createHealthBar",
      "description": "Create health bar above the player",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 154
    },
    {
      "name": "getHealthColor",
      "description": "Get health bar color based on health percentage",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 192
    },
    {
      "name": "update",
      "description": "Update remote player each frame",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 207
    },
    {
      "name": "interpolatePosition",
      "description": "Smoothly interpolate to target position",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 223
    },
    {
      "name": "updateUI",
      "description": "Update UI elements (name tag, health bar) position",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 258
    },
    {
      "name": "updateAnimations",
      "description": "Update animations based on state",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 300
    },
    {
      "name": "updateFromNetworkData",
      "description": "Update player state from network data",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 334
    },
    {
      "name": "setHealth",
      "description": "Set player health and update health bar",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 375
    },
    {
      "name": "setAlive",
      "description": "Set player alive state",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 391
    },
    {
      "name": "setUsername",
      "description": "Set player username and update name tag",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 411
    },
    {
      "name": "triggerShoot",
      "description": "Trigger shooting animation",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 425
    },
    {
      "name": "getPosition",
      "description": "Get player position",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 433
    },
    {
      "name": "getMesh",
      "description": "Get player mesh",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 440
    },
    {
      "name": "isPlayerAlive",
      "description": "Check if player is alive",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 447
    },
    {
      "name": "dispose",
      "description": "Dispose of remote player resources",
      "file": "src\\entities\\RemotePlayer.js",
      "line": 454
    }
  ],
  "src\\entities\\weapons\\AccuracySystem.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 10
    },
    {
      "name": "initializeRecoilPatterns",
      "description": "Initialize weapon-specific recoil patterns",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 35
    },
    {
      "name": "update",
      "description": "Update accuracy system each frame",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 88
    },
    {
      "name": "updateMovementPenalty",
      "description": "Update movement penalty based on player velocity",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 108
    },
    {
      "name": "addRecoil",
      "description": "Add recoil when weapon fires",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 126
    },
    {
      "name": "getCurrentAccuracy",
      "description": "Get current accuracy for a weapon",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 145
    },
    {
      "name": "getCurrentRecoilPattern",
      "description": "Get recoil pattern for current weapon",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 162
    },
    {
      "name": "calculateShotSpread",
      "description": "Calculate shot spread based on current accuracy",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 170
    },
    {
      "name": "cloneDirection",
      "description": "Clone direction vector (handles both BABYLON Vector3 and plain objects)",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 182
    },
    {
      "name": "normalize",
      "description": "No description available",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 190
    },
    {
      "name": "applyRecoilToDirection",
      "description": "Apply recoil pattern to shot direction",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 205
    },
    {
      "name": "setCurrentWeapon",
      "description": "Set current weapon for context-aware calculations",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 262
    },
    {
      "name": "reset",
      "description": "Reset accuracy system (useful for weapon switching)",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 269
    },
    {
      "name": "getAccuracyState",
      "description": "Get accuracy system state for debugging/UI",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 278
    },
    {
      "name": "isMovementAffected",
      "description": "Check if weapon is affected by movement",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 291
    },
    {
      "name": "hasRecoilAccumulation",
      "description": "Check if weapon has recoil accumulation",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 298
    },
    {
      "name": "getTimeSinceLastShot",
      "description": "Get time since last shot",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 305
    },
    {
      "name": "dispose",
      "description": "Dispose of accuracy system resources",
      "file": "src\\entities\\weapons\\AccuracySystem.js",
      "line": 312
    }
  ],
  "src\\entities\\weapons\\AmmoRegistry.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 10
    },
    {
      "name": "initializeAmmo",
      "description": "Initialize ammunition for all weapon types based on their configurations",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 28
    },
    {
      "name": "setAmmo",
      "description": "Set ammunition for a specific weapon type @param {string} weaponType - The weapon type from WeaponType enum @param {number} current - Current ammunition count @param {number} max - Maximum ammunition capacity",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 49
    },
    {
      "name": "consumeAmmo",
      "description": "Consume ammunition for a specific weapon type @param {string} weaponType - The weapon type from WeaponType enum @param {number} amount - Amount of ammunition to consume (default: 1) @returns {boolean} - True if ammunition was consumed, false if not enough ammo",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 82
    },
    {
      "name": "reloadWeapon",
      "description": "Reload weapon to full magazine capacity @param {string} weaponType - The weapon type from WeaponType enum @returns {boolean} - True if reload was performed, false if not needed or infinite ammo",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 122
    },
    {
      "name": "getCurrentAmmo",
      "description": "Get current ammunition count for a weapon type @param {string} weaponType - The weapon type from WeaponType enum @returns {number} - Current ammunition count (Infinity for infinite ammo weapons)",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 151
    },
    {
      "name": "getMaxAmmo",
      "description": "Get maximum ammunition capacity for a weapon type @param {string} weaponType - The weapon type from WeaponType enum @returns {number} - Maximum ammunition capacity (Infinity for infinite ammo weapons)",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 166
    },
    {
      "name": "isEmpty",
      "description": "Check if weapon magazine is empty @param {string} weaponType - The weapon type from WeaponType enum @returns {boolean} - True if magazine is empty (always false for infinite ammo)",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 181
    },
    {
      "name": "isFull",
      "description": "Check if weapon magazine is full @param {string} weaponType - The weapon type from WeaponType enum @returns {boolean} - True if magazine is full (always true for infinite ammo)",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 196
    },
    {
      "name": "isInfiniteAmmo",
      "description": "Check if weapon has infinite ammunition @param {string} weaponType - The weapon type from WeaponType enum @returns {boolean} - True if weapon has infinite ammunition",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 211
    },
    {
      "name": "getAmmoInfo",
      "description": "Get ammunition information for a weapon type @param {string} weaponType - The weapon type from WeaponType enum @returns {object} - Ammunition information object",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 226
    },
    {
      "name": "getAllAmmoInfo",
      "description": "Get ammunition information for all weapon types @returns {Map} - Map of weapon types to ammunition information",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 248
    },
    {
      "name": "resetAmmo",
      "description": "Reset ammunition for a specific weapon type to its default values @param {string} weaponType - The weapon type from WeaponType enum",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 262
    },
    {
      "name": "resetAllAmmo",
      "description": "Reset ammunition for all weapon types to their default values",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 284
    },
    {
      "name": "triggerAmmoChanged",
      "description": "Trigger ammunition changed event @private",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 296
    },
    {
      "name": "triggerAmmoEmpty",
      "description": "Trigger ammunition empty event @private",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 306
    },
    {
      "name": "triggerAmmoFull",
      "description": "Trigger ammunition full event @private",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 316
    },
    {
      "name": "dispose",
      "description": "Dispose of the AmmoRegistry",
      "file": "src\\entities\\weapons\\AmmoRegistry.js",
      "line": 325
    }
  ],
  "src\\entities\\weapons\\WeaponBase.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 12
    },
    {
      "name": "initialize",
      "description": "Initialize the weapon - now generic for all weapon types",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 63
    },
    {
      "name": "setupWeaponSpecifics",
      "description": "Setup weapon-specific configurations",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 82
    },
    {
      "name": "fire",
      "description": "Fire the weapon (generic method handling all weapon types)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 107
    },
    {
      "name": "fireProjectile",
      "description": "Fire a single projectile (rifles, pistols, SMGs, snipers)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 178
    },
    {
      "name": "fireShotgun",
      "description": "Fire shotgun pellets",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 200
    },
    {
      "name": "performMeleeAttack",
      "description": "Perform melee attack (knife)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 228
    },
    {
      "name": "processMeleeHit",
      "description": "Process melee hit",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 265
    },
    {
      "name": "calculateShotgunSpread",
      "description": "Calculate shotgun pellet spread",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 303
    },
    {
      "name": "playFiringAnimation",
      "description": "Play firing animation (manual animation for firing/swapping)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 330
    },
    {
      "name": "playSwapAnimation",
      "description": "Play weapon swap animation (manual animation)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 367
    },
    {
      "name": "createProjectileData",
      "description": "Create projectile data (can be overridden by subclasses)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 401
    },
    {
      "name": "createMuzzleFlash",
      "description": "Create muzzle flash effect using configuration",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 421
    },
    {
      "name": "playFireSound",
      "description": "Play weapon fire sound",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 465
    },
    {
      "name": "canFireWeapon",
      "description": "Check if weapon can fire",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 476
    },
    {
      "name": "reload",
      "description": "Start reloading the weapon",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 488
    },
    {
      "name": "finishReload",
      "description": "Finish reloading the weapon",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 531
    },
    {
      "name": "playReloadSound",
      "description": "Play reload sound",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 563
    },
    {
      "name": "update",
      "description": "Update weapon logic each frame",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 574
    },
    {
      "name": "loadModel",
      "description": "Load weapon model and animations using AssetManager",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 595
    },
    {
      "name": "applyModelConfiguration",
      "description": "Apply model configuration settings (scaling, position, rotation, handedness)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 714
    },
    {
      "name": "playReloadAnimation",
      "description": "Play reload animation",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 764
    },
    {
      "name": "pauseAtIdle",
      "description": "Pause animation at idle (beginning of sequence)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 811
    },
    {
      "name": "applyRecoil",
      "description": "Apply visual recoil effects to weapon model",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 832
    },
    {
      "name": "createRecoilPattern",
      "description": "Create weapon-specific recoil pattern",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 866
    },
    {
      "name": "updateAnimations",
      "description": "Update animations",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 878
    },
    {
      "name": "getCurrentAmmo",
      "description": "Get current ammunition count (delegated to AmmoRegistry)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 886
    },
    {
      "name": "getMaxAmmo",
      "description": "Get maximum ammunition capacity (delegated to AmmoRegistry)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 897
    },
    {
      "name": "isCurrentlyReloading",
      "description": "Check if weapon is currently reloading",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 908
    },
    {
      "name": "getWeaponInfo",
      "description": "Get weapon information for UI",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 915
    },
    {
      "name": "setVisible",
      "description": "Show/hide weapon model",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 933
    },
    {
      "name": "setAiming",
      "description": "Set aiming state for weapon",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 942
    },
    {
      "name": "consumeAmmo",
      "description": "Consume ammunition (delegated to AmmoRegistry)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 963
    },
    {
      "name": "setFiringCooldown",
      "description": "Set firing cooldown",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1011
    },
    {
      "name": "updateMovementPenalty",
      "description": "Update movement penalty for accuracy system",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1019
    },
    {
      "name": "addRecoilToAccuracy",
      "description": "Add recoil to accuracy system when firing",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1028
    },
    {
      "name": "getCurrentAccuracy",
      "description": "Get current effective accuracy",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1037
    },
    {
      "name": "applyAccuracyToDirection",
      "description": "Apply accuracy and recoil to shot direction",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1047
    },
    {
      "name": "getAccuracyState",
      "description": "Get accuracy system state for debugging",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1090
    },
    {
      "name": "resetAccuracy",
      "description": "Reset accuracy system (useful for weapon switching)",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1100
    },
    {
      "name": "dispose",
      "description": "Dispose of weapon resources",
      "file": "src\\entities\\weapons\\WeaponBase.js",
      "line": 1109
    }
  ],
  "src\\hud\\PerformanceMonitor.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 9
    },
    {
      "name": "initialize",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 62
    },
    {
      "name": "update",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 84
    },
    {
      "name": "updateFPS",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 108
    },
    {
      "name": "updateMemoryUsage",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 122
    },
    {
      "name": "updateRenderStats",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 136
    },
    {
      "name": "checkPerformance",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 145
    },
    {
      "name": "handleLowFPS",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 168
    },
    {
      "name": "handleHighMemoryUsage",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 188
    },
    {
      "name": "adjustQuality",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 202
    },
    {
      "name": "applyQualitySettings",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 220
    },
    {
      "name": "getQualitySettings",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 258
    },
    {
      "name": "addPerformanceWarning",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 293
    },
    {
      "name": "createDebugDisplay",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 315
    },
    {
      "name": "updateDebugDisplay",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 354
    },
    {
      "name": "getAverageFPS",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 376
    },
    {
      "name": "getAverageMemoryUsage",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 382
    },
    {
      "name": "getCurrentMetrics",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 388
    },
    {
      "name": "forceQualityLevel",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 402
    },
    {
      "name": "enableAdaptiveQuality",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 408
    },
    {
      "name": "setTargetFPS",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 413
    },
    {
      "name": "clearWarnings",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 419
    },
    {
      "name": "dispose",
      "description": "No description available",
      "file": "src\\hud\\PerformanceMonitor.js",
      "line": 423
    }
  ],
  "src\\mapEditing\\EditorTools.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 9
    },
    {
      "name": "initialize",
      "description": "Initialize editor tools",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 128
    },
    {
      "name": "setupGizmoEvents",
      "description": "Set up gizmo event listeners",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 154
    },
    {
      "name": "setupPlacementPreview",
      "description": "Set up placement preview system",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 183
    },
    {
      "name": "setTool",
      "description": "Set the current tool @param {string} tool - Tool name (SELECT, PLACE_ENTITY, PLACE_SPAWN, PLACE_PROP, PLACE_PRIMITIVE)",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 196
    },
    {
      "name": "exitCurrentTool",
      "description": "Exit current tool",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 214
    },
    {
      "name": "enterCurrentTool",
      "description": "Enter current tool",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 228
    },
    {
      "name": "enterPlacementMode",
      "description": "Enter placement mode @param {string} objectType - Type of object to place",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 249
    },
    {
      "name": "exitPlacementMode",
      "description": "Exit placement mode",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 265
    },
    {
      "name": "createPlacementPreview",
      "description": "Create placement preview mesh",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 278
    },
    {
      "name": "createEntityPreview",
      "description": "Create entity placement preview @returns {BABYLON.Mesh} Preview mesh",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 308
    },
    {
      "name": "createSpawnPreview",
      "description": "Create spawn point placement preview @returns {BABYLON.Mesh} Preview mesh",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 333
    },
    {
      "name": "createPropPreview",
      "description": "Create prop placement preview @returns {BABYLON.Mesh} Preview mesh",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 355
    },
    {
      "name": "createPrimitivePreview",
      "description": "Create primitive placement preview @returns {BABYLON.Mesh} Preview mesh",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 377
    },
    {
      "name": "updatePlacementPreview",
      "description": "Update placement preview position @param {BABYLON.PointerInfo} pointerInfo - Pointer event info",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 458
    },
    {
      "name": "hidePlacementPreview",
      "description": "Hide placement preview",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 522
    },
    {
      "name": "handlePlacementClick",
      "description": "Handle placement click @param {BABYLON.PointerInfo} pointerInfo - Pointer event info @returns {boolean} True if placement was handled",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 534
    },
    {
      "name": "placeEntity",
      "description": "Place an entity at the preview position",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 569
    },
    {
      "name": "placeSpawnPoint",
      "description": "Place a spawn point at the preview position",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 601
    },
    {
      "name": "placeProp",
      "description": "Place a prop at the preview position",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 630
    },
    {
      "name": "placePrimitive",
      "description": "Place a primitive at the preview position",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 663
    },
    {
      "name": "setSelectedEntityType",
      "description": "Set the selected entity type for placement @param {string} entityType - Entity type to select",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 701
    },
    {
      "name": "setSelectedPrimitiveType",
      "description": "Set the selected primitive type for placement @param {string} primitiveType - Primitive type to select",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 718
    },
    {
      "name": "getEntityTypes",
      "description": "Get available entity types @returns {Object} Entity types configuration",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 735
    },
    {
      "name": "getPrimitiveTypes",
      "description": "Get available primitive types @returns {Object} Primitive types configuration",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 743
    },
    {
      "name": "attachGizmoToObject",
      "description": "Attach gizmo to selected object @param {BABYLON.Mesh} mesh - Mesh to attach gizmo to",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 751
    },
    {
      "name": "detachGizmo",
      "description": "Detach gizmo from current object",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 763
    },
    {
      "name": "updateObjectData",
      "description": "Update object data after gizmo manipulation",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 773
    },
    {
      "name": "generateEntityId",
      "description": "Generate unique entity ID @returns {string} Unique entity ID",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 825
    },
    {
      "name": "generatePropId",
      "description": "Generate unique prop ID @returns {string} Unique prop ID",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 833
    },
    {
      "name": "generatePrimitiveId",
      "description": "Generate unique primitive ID @returns {string} Unique primitive ID",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 841
    },
    {
      "name": "applyMaterialToSelected",
      "description": "Apply material to selected objects @param {string} materialName - Name of material to apply",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 849
    },
    {
      "name": "setSelectedMaterial",
      "description": "Set selected material for new objects @param {string} materialName - Name of material to select",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 890
    },
    {
      "name": "getAvailableMaterials",
      "description": "Get available materials @returns {Object} Available materials configuration",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 901
    },
    {
      "name": "toggleGridSnapping",
      "description": "Toggle grid snapping",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 908
    },
    {
      "name": "setGridSize",
      "description": "Set grid size @param {number} size - Grid size",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 917
    },
    {
      "name": "enableScaleGizmo",
      "description": "Enable scale gizmo",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 927
    },
    {
      "name": "disableScaleGizmo",
      "description": "Disable scale gizmo",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 937
    },
    {
      "name": "setGizmoCoordinateSystem",
      "description": "Set gizmo coordinate system (local or world) @param {boolean} useLocal - Whether to use local coordinate system",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 948
    },
    {
      "name": "dispose",
      "description": "Dispose of editor tools",
      "file": "src\\mapEditing\\EditorTools.js",
      "line": 959
    }
  ],
  "src\\mapEditing\\MapEditor.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 12
    },
    {
      "name": "initialize",
      "description": "Initialize the map editor",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 75
    },
    {
      "name": "createEditorCamera",
      "description": "Create the editor camera (ArcRotateCamera)",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 98
    },
    {
      "name": "setupEventListeners",
      "description": "Set up event listeners",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 134
    },
    {
      "name": "handleKeyDown",
      "description": "Handle keyboard input @param {KeyboardEvent} event - Keyboard event",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 165
    },
    {
      "name": "handlePointerDown",
      "description": "Handle pointer down events @param {BABYLON.PointerInfo} pointerInfo - Pointer event info",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 241
    },
    {
      "name": "handlePointerUp",
      "description": "Handle pointer up events @param {BABYLON.PointerInfo} pointerInfo - Pointer event info",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 261
    },
    {
      "name": "activate",
      "description": "Activate the map editor @param {Object} mapData - Optional map data to load @returns {Promise} - Promise resolving when editor is activated",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 276
    },
    {
      "name": "deactivate",
      "description": "Deactivate the map editor @param {boolean} saveChanges - Whether to save changes before deactivating @returns {Promise} - Promise resolving when editor is deactivated",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 330
    },
    {
      "name": "toggleMode",
      "description": "Toggle between EDIT and PLAY modes",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 376
    },
    {
      "name": "setMode",
      "description": "Set the editor mode @param {string} mode - Mode to set ('EDIT' or 'PLAY')",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 387
    },
    {
      "name": "enterPlayMode",
      "description": "Enter play mode for testing",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 412
    },
    {
      "name": "enterEditMode",
      "description": "Enter edit mode",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 446
    },
    {
      "name": "createNewMap",
      "description": "Create a new map",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 456
    },
    {
      "name": "addDefaultSpawnPoints",
      "description": "Add default spawn points to a new map",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 496
    },
    {
      "name": "createSpawnPointVisual",
      "description": "Create visual representation of a spawn point @param {Object} spawnData - Spawn point data @param {number} index - Spawn point index @returns {BABYLON.Mesh} - Created spawn point mesh",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 516
    },
    {
      "name": "loadMapData",
      "description": "Load map data into the editor @param {Object} mapData - Map data to load",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 549
    },
    {
      "name": "createMapVisuals",
      "description": "Create visual representations of map objects",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 577
    },
    {
      "name": "createPropVisual",
      "description": "Create visual representation of a prop @param {Object} propData - Prop data @param {number} index - Prop index @returns {BABYLON.Mesh} - Created prop mesh",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 600
    },
    {
      "name": "createEntityVisual",
      "description": "Create visual representation of an entity @param {Object} entityData - Entity data @param {number} index - Entity index @returns {BABYLON.Mesh} - Created entity mesh",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 649
    },
    {
      "name": "clearMap",
      "description": "Clear the current map",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 691
    },
    {
      "name": "selectObject",
      "description": "Select an object @param {BABYLON.Mesh} mesh - Mesh to select @param {boolean} addToSelection - Whether to add to existing selection",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 713
    },
    {
      "name": "clearSelection",
      "description": "Clear selection",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 740
    },
    {
      "name": "highlightMesh",
      "description": "Highlight or unhighlight a mesh @param {BABYLON.Mesh} mesh - Mesh to highlight @param {boolean} highlight - Whether to highlight or unhighlight",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 763
    },
    {
      "name": "deleteSelected",
      "description": "Delete selected objects",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 785
    },
    {
      "name": "deleteObject",
      "description": "Delete a specific object @param {BABYLON.Mesh} mesh - Mesh to delete",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 808
    },
    {
      "name": "copySelected",
      "description": "Copy selected objects to clipboard",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 843
    },
    {
      "name": "cutSelected",
      "description": "Cut selected objects to clipboard",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 863
    },
    {
      "name": "paste",
      "description": "Paste objects from clipboard",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 871
    },
    {
      "name": "getObjectData",
      "description": "Get object data from mesh @param {BABYLON.Mesh} mesh - Mesh to get data from @returns {Object|null} - Object data or null",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 900
    },
    {
      "name": "createObjectFromData",
      "description": "Create object from data @param {Object} objectData - Object data",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 938
    },
    {
      "name": "saveUndoState",
      "description": "Save undo state @param {string} description - Description of the action",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 967
    },
    {
      "name": "undo",
      "description": "Undo last action",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 992
    },
    {
      "name": "redo",
      "description": "Redo last undone action",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1019
    },
    {
      "name": "serializeMap",
      "description": "Serialize current map to JSON @returns {string} - JSON string of map data",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1042
    },
    {
      "name": "cleanMapData",
      "description": "Clean map data for serialization @param {Object} mapData - Map data to clean @returns {Object} - Cleaned map data",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1055
    },
    {
      "name": "saveMap",
      "description": "Save the current map @param {string} filename - Optional filename @returns {Promise} - Promise resolving when map is saved",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1095
    },
    {
      "name": "downloadMapFile",
      "description": "Download map file (browser implementation) @param {string} mapJson - Map JSON string @param {string} filename - Filename",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1129
    },
    {
      "name": "showLoadDialog",
      "description": "Show load dialog (placeholder)",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1146
    },
    {
      "name": "generateMapId",
      "description": "Generate a unique map ID @returns {string} - Generated map ID",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1155
    },
    {
      "name": "markDirty",
      "description": "Mark the map as dirty (has unsaved changes)",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1162
    },
    {
      "name": "startAutoSave",
      "description": "Start auto-save timer",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1174
    },
    {
      "name": "stopAutoSave",
      "description": "Stop auto-save timer",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1192
    },
    {
      "name": "getMapData",
      "description": "Get current map data @returns {Object} - Current map data",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1204
    },
    {
      "name": "isEditorActive",
      "description": "Check if editor is active @returns {boolean} - True if editor is active",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1212
    },
    {
      "name": "getCurrentMode",
      "description": "Get current mode @returns {string} - Current mode ('EDIT' or 'PLAY')",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1220
    },
    {
      "name": "hasUnsavedChanges",
      "description": "Check if map has unsaved changes @returns {boolean} - True if map has unsaved changes",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1228
    },
    {
      "name": "setCallbacks",
      "description": "Set event callbacks @param {Object} callbacks - Object containing callback functions",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1236
    },
    {
      "name": "dispose",
      "description": "Dispose of the MapEditor and clean up resources",
      "file": "src\\mapEditing\\MapEditor.js",
      "line": 1247
    }
  ],
  "src\\physics\\PhysicsManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 10
    },
    {
      "name": "initialize",
      "description": "Initialize the physics world with the configured engine",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 31
    },
    {
      "name": "initializeCannonJS",
      "description": "Initialize CannonJS physics plugin",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 85
    },
    {
      "name": "initializeAmmoJS",
      "description": "Initialize AmmoJS physics plugin",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 110
    },
    {
      "name": "setupCollisionDetection",
      "description": "Set up collision detection and callbacks",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 127
    },
    {
      "name": "initializeDebugRenderer",
      "description": "Initialize debug renderer for physics visualization",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 151
    },
    {
      "name": "registerPhysicsBody",
      "description": "Register a physics body with collision layer",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 171
    },
    {
      "name": "setCollisionLayer",
      "description": "Set collision layer for a physics impostor",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 210
    },
    {
      "name": "registerCollisionCallback",
      "description": "Register collision callback for specific body interactions",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 255
    },
    {
      "name": "removePhysicsBody",
      "description": "Remove physics body from the system",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 267
    },
    {
      "name": "beforePhysicsStep",
      "description": "Update physics world (called before physics step)",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 283
    },
    {
      "name": "afterPhysicsStep",
      "description": "Handle post-physics updates (called after physics step)",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 293
    },
    {
      "name": "processCollisions",
      "description": "Process collision events and trigger callbacks",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 309
    },
    {
      "name": "updatePerformanceMetrics",
      "description": "Update performance metrics",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 320
    },
    {
      "name": "update",
      "description": "Manual update method for physics when observables aren't available This should be called from the main game loop",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 335
    },
    {
      "name": "getPerformanceMetrics",
      "description": "Get physics performance metrics",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 352
    },
    {
      "name": "generateBodyId",
      "description": "Generate unique body ID",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 365
    },
    {
      "name": "setDebugRendering",
      "description": "Enable/disable debug rendering",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 372
    },
    {
      "name": "getPhysicsWorld",
      "description": "Get physics world reference (for advanced usage)",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 381
    },
    {
      "name": "dispose",
      "description": "Dispose of the physics manager and clean up resources",
      "file": "src\\physics\\PhysicsManager.js",
      "line": 388
    }
  ],
  "src\\physics\\RaycastManager.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\physics\\RaycastManager.js",
      "line": 10
    },
    {
      "name": "initializeRayPool",
      "description": "Initialize the ray pool for performance optimization",
      "file": "src\\physics\\RaycastManager.js",
      "line": 40
    },
    {
      "name": "getRay",
      "description": "Get a ray from the pool or create a new one",
      "file": "src\\physics\\RaycastManager.js",
      "line": 50
    },
    {
      "name": "returnRay",
      "description": "Return a ray to the pool",
      "file": "src\\physics\\RaycastManager.js",
      "line": 66
    },
    {
      "name": "bulletRaycast",
      "description": "Perform optimized bullet raycast for hit detection",
      "file": "src\\physics\\RaycastManager.js",
      "line": 78
    },
    {
      "name": "lineOfSightRaycast",
      "description": "Perform line-of-sight raycast between two points",
      "file": "src\\physics\\RaycastManager.js",
      "line": 106
    },
    {
      "name": "mousePickRaycast",
      "description": "Perform mouse picking raycast for map editor",
      "file": "src\\physics\\RaycastManager.js",
      "line": 140
    },
    {
      "name": "multiRaycast",
      "description": "Perform multi-ray raycast for shotgun-style weapons",
      "file": "src\\physics\\RaycastManager.js",
      "line": 171
    },
    {
      "name": "performRaycast",
      "description": "Core raycast implementation",
      "file": "src\\physics\\RaycastManager.js",
      "line": 211
    },
    {
      "name": "performMeshRaycast",
      "description": "Perform mesh-based raycast using Babylon.js scene picking",
      "file": "src\\physics\\RaycastManager.js",
      "line": 257
    },
    {
      "name": "performPhysicsRaycast",
      "description": "Perform physics-based raycast using the physics engine",
      "file": "src\\physics\\RaycastManager.js",
      "line": 300
    },
    {
      "name": "calculateSpreadDirection",
      "description": "Calculate spread direction for multi-ray weapons",
      "file": "src\\physics\\RaycastManager.js",
      "line": 313
    },
    {
      "name": "getRayFromCamera",
      "description": "Get raycast from camera for mouse picking",
      "file": "src\\physics\\RaycastManager.js",
      "line": 330
    },
    {
      "name": "isPointVisible",
      "description": "Check if point is visible from another point (line of sight)",
      "file": "src\\physics\\RaycastManager.js",
      "line": 339
    },
    {
      "name": "getAllMeshesAlongRay",
      "description": "Find all meshes along a ray path",
      "file": "src\\physics\\RaycastManager.js",
      "line": 346
    },
    {
      "name": "updatePerformanceMetrics",
      "description": "Update performance metrics (call once per frame)",
      "file": "src\\physics\\RaycastManager.js",
      "line": 385
    },
    {
      "name": "getPerformanceMetrics",
      "description": "Get performance metrics",
      "file": "src\\physics\\RaycastManager.js",
      "line": 394
    },
    {
      "name": "configure",
      "description": "Configure raycast settings",
      "file": "src\\physics\\RaycastManager.js",
      "line": 407
    },
    {
      "name": "dispose",
      "description": "Dispose of the raycast manager and clean up resources",
      "file": "src\\physics\\RaycastManager.js",
      "line": 414
    }
  ],
  "src\\utils\\EventEmitter.js": [
    {
      "name": "constructor",
      "description": "No description available",
      "file": "src\\utils\\EventEmitter.js",
      "line": 7
    },
    {
      "name": "on",
      "description": "Register an event listener",
      "file": "src\\utils\\EventEmitter.js",
      "line": 15
    },
    {
      "name": "once",
      "description": "Register a one-time event listener",
      "file": "src\\utils\\EventEmitter.js",
      "line": 46
    },
    {
      "name": "off",
      "description": "Remove event listener(s)",
      "file": "src\\utils\\EventEmitter.js",
      "line": 53
    },
    {
      "name": "emit",
      "description": "Emit an event to all listeners",
      "file": "src\\utils\\EventEmitter.js",
      "line": 82
    },
    {
      "name": "removeAllListeners",
      "description": "Remove all listeners",
      "file": "src\\utils\\EventEmitter.js",
      "line": 127
    },
    {
      "name": "dispose",
      "description": "Cleanup resources",
      "file": "src\\utils\\EventEmitter.js",
      "line": 135
    }
  ]
}